!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABSYN_H	absyn.h	2;"	d
AND	y.tab.c	/^    AND = 281,$/;"	e	enum:yytokentype	file:
AND	y.tab.c	189;"	d	file:
AND	y.tab.h	/^    AND = 281,$/;"	e	enum:yytokentype
AND	y.tab.h	118;"	d
ARRAY	y.tab.c	/^    ARRAY = 284,$/;"	e	enum:yytokentype	file:
ARRAY	y.tab.c	192;"	d	file:
ARRAY	y.tab.h	/^    ARRAY = 284,$/;"	e	enum:yytokentype
ARRAY	y.tab.h	121;"	d
<<<<<<< HEAD
ASSEM_H_	assem.h	6;"	d
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
ASSIGN	y.tab.c	/^    ASSIGN = 283,$/;"	e	enum:yytokentype	file:
ASSIGN	y.tab.c	191;"	d	file:
ASSIGN	y.tab.h	/^    ASSIGN = 283,$/;"	e	enum:yytokentype
ASSIGN	y.tab.h	120;"	d
AS_InstrList	assem.c	/^AS_instrList AS_InstrList(AS_instr head, AS_instrList tail)$/;"	f
AS_Label	assem.c	/^AS_instr AS_Label(string a, Temp_label label) {$/;"	f
AS_Move	assem.c	/^AS_instr AS_Move(string a, Temp_tempList d, Temp_tempList s) {$/;"	f
AS_Oper	assem.c	/^AS_instr AS_Oper(string a, Temp_tempList d, Temp_tempList s, AS_targets j) {$/;"	f
AS_Proc	assem.c	/^AS_proc AS_Proc(string p, AS_instrList b, string e)$/;"	f
AS_Targets	assem.c	/^AS_targets AS_Targets(Temp_labelList labels) {$/;"	f
AS_instr	assem.h	/^typedef struct AS_instr_ *AS_instr;$/;"	t	typeref:struct:AS_instr_
AS_instrList	assem.h	/^typedef struct AS_instrList_ *AS_instrList;$/;"	t	typeref:struct:AS_instrList_
AS_instrList_	assem.h	/^struct AS_instrList_ { AS_instr head; AS_instrList tail;};$/;"	s
AS_instr_	assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	s
AS_print	assem.c	/^void AS_print(FILE *out, AS_instr i, Temp_map m)$/;"	f
AS_printInstrList	assem.c	/^void AS_printInstrList (FILE *out, AS_instrList iList, Temp_map m)$/;"	f
AS_proc	assem.h	/^typedef struct AS_proc_ *AS_proc;$/;"	t	typeref:struct:AS_proc_
AS_proc_	assem.h	/^struct AS_proc_ {$/;"	s
AS_splice	assem.c	/^AS_instrList AS_splice(AS_instrList a, AS_instrList b) {$/;"	f
AS_targets	assem.h	/^typedef struct {Temp_labelList labels;} *AS_targets;$/;"	t	typeref:struct:__anon22
A_ArrayExp	absyn.c	/^A_exp A_ArrayExp(A_pos pos, S_symbol typ, A_exp size, A_exp init)$/;"	f
A_ArrayTy	absyn.c	/^A_ty A_ArrayTy(A_pos pos, S_symbol array)$/;"	f
A_AssignExp	absyn.c	/^A_exp A_AssignExp(A_pos pos, A_var var, A_exp exp)$/;"	f
A_BreakExp	absyn.c	/^A_exp A_BreakExp(A_pos pos)$/;"	f
A_CallExp	absyn.c	/^A_exp A_CallExp(A_pos pos, S_symbol func, A_expList args)$/;"	f
A_DecList	absyn.c	/^A_decList A_DecList(A_dec head, A_decList tail)$/;"	f
A_Efield	absyn.c	/^A_efield A_Efield(S_symbol name, A_exp exp)$/;"	f
A_EfieldList	absyn.c	/^A_efieldList A_EfieldList(A_efield head, A_efieldList tail)$/;"	f
A_ExpList	absyn.c	/^A_expList A_ExpList(A_exp head, A_expList tail)$/;"	f
A_Field	absyn.c	/^A_field A_Field(A_pos pos, S_symbol name, S_symbol typ)$/;"	f
A_FieldList	absyn.c	/^A_fieldList A_FieldList(A_field head, A_fieldList tail)$/;"	f
A_FieldVar	absyn.c	/^A_var A_FieldVar(A_pos pos, A_var var, S_symbol sym)$/;"	f
A_ForExp	absyn.c	/^A_exp A_ForExp(A_pos pos, S_symbol var, A_exp lo, A_exp hi, A_exp body)$/;"	f
A_FunctionDec	absyn.c	/^A_dec A_FunctionDec(A_pos pos, A_fundecList function)$/;"	f
A_Fundec	absyn.c	/^A_fundec A_Fundec(A_pos pos, S_symbol name, A_fieldList params, S_symbol result,$/;"	f
A_FundecList	absyn.c	/^A_fundecList A_FundecList(A_fundec head, A_fundecList tail)$/;"	f
A_IfExp	absyn.c	/^A_exp A_IfExp(A_pos pos, A_exp test, A_exp then, A_exp elsee)$/;"	f
A_IntExp	absyn.c	/^A_exp A_IntExp(A_pos pos, int i)$/;"	f
A_LetExp	absyn.c	/^A_exp A_LetExp(A_pos pos, A_decList decs, A_exp body)$/;"	f
A_NameTy	absyn.c	/^A_ty A_NameTy(A_pos pos, S_symbol name)$/;"	f
A_Namety	absyn.c	/^A_namety A_Namety(S_symbol name, A_ty ty)$/;"	f
A_NametyList	absyn.c	/^A_nametyList A_NametyList(A_namety head, A_nametyList tail)$/;"	f
A_NilExp	absyn.c	/^A_exp A_NilExp(A_pos pos)$/;"	f
A_OpExp	absyn.c	/^A_exp A_OpExp(A_pos pos, A_oper oper, A_exp left, A_exp right)$/;"	f
A_RecordExp	absyn.c	/^A_exp A_RecordExp(A_pos pos, S_symbol typ, A_efieldList fields)$/;"	f
A_RecordTy	absyn.c	/^A_ty A_RecordTy(A_pos pos, A_fieldList record)$/;"	f
A_SeqExp	absyn.c	/^A_exp A_SeqExp(A_pos pos, A_expList seq)$/;"	f
A_SimpleVar	absyn.c	/^A_var A_SimpleVar(A_pos pos, S_symbol sym)$/;"	f
A_StringExp	absyn.c	/^A_exp A_StringExp(A_pos pos, string s)$/;"	f
A_SubscriptVar	absyn.c	/^A_var A_SubscriptVar(A_pos pos, A_var var, A_exp exp)$/;"	f
A_TypeDec	absyn.c	/^A_dec A_TypeDec(A_pos pos, A_nametyList type)$/;"	f
A_VarDec	absyn.c	/^A_dec A_VarDec(A_pos pos, S_symbol var, S_symbol typ, A_exp init)$/;"	f
A_VarExp	absyn.c	/^A_exp A_VarExp(A_pos pos, A_var var)$/;"	f
A_WhileExp	absyn.c	/^A_exp A_WhileExp(A_pos pos, A_exp test, A_exp body)$/;"	f
A_arrayExp	absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon6
A_arrayTy	absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	e	enum:A_ty_::__anon20
A_assignExp	absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon6
A_breakExp	absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon6
A_callExp	absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon6
A_dec	absyn.h	/^typedef struct A_dec_ *A_dec;$/;"	t	typeref:struct:A_dec_
A_decList	absyn.h	/^typedef struct A_decList_ *A_decList;$/;"	t	typeref:struct:A_decList_
A_decList_	absyn.h	/^struct A_decList_ {A_dec head; A_decList tail;};$/;"	s
A_dec_	absyn.h	/^struct A_dec_ $/;"	s
A_divideOp	absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon1
A_efield	absyn.h	/^typedef struct A_efield_ *A_efield;$/;"	t	typeref:struct:A_efield_
A_efieldList	absyn.h	/^typedef struct A_efieldList_ *A_efieldList;$/;"	t	typeref:struct:A_efieldList_
A_efieldList_	absyn.h	/^struct A_efieldList_ {A_efield head; A_efieldList tail;};$/;"	s
A_efield_	absyn.h	/^struct A_efield_ {S_symbol name; A_exp exp;};$/;"	s
A_eqOp	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon1
A_exp	absyn.h	/^typedef struct A_exp_ *A_exp;$/;"	t	typeref:struct:A_exp_
A_expList	absyn.h	/^typedef struct A_expList_ *A_expList;$/;"	t	typeref:struct:A_expList_
A_expList_	absyn.h	/^struct A_expList_ {A_exp head; A_expList tail;};$/;"	s
A_exp_	absyn.h	/^struct A_exp_$/;"	s
A_field	absyn.h	/^typedef struct A_field_ *A_field;$/;"	t	typeref:struct:A_field_
A_fieldList	absyn.h	/^typedef struct A_fieldList_ *A_fieldList;$/;"	t	typeref:struct:A_fieldList_
A_fieldList_	absyn.h	/^struct A_fieldList_ {A_field head; A_fieldList tail;};$/;"	s
A_fieldVar	absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	e	enum:A_var_::__anon2
A_field_	absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	s
A_forExp	absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon6
A_functionDec	absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	e	enum:A_dec_::__anon17
A_fundec	absyn.h	/^typedef struct A_fundec_ *A_fundec;$/;"	t	typeref:struct:A_fundec_
A_fundecList	absyn.h	/^typedef struct A_fundecList_ *A_fundecList;$/;"	t	typeref:struct:A_fundecList_
A_fundecList_	absyn.h	/^struct A_fundecList_ {A_fundec head; A_fundecList tail;};$/;"	s
A_fundec_	absyn.h	/^struct A_fundec_ {A_pos pos;$/;"	s
A_geOp	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon1
A_gtOp	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon1
A_ifExp	absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon6
A_intExp	absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon6
A_leOp	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon1
A_letExp	absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon6
A_ltOp	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon1
A_minusOp	absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon1
A_nameTy	absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	e	enum:A_ty_::__anon20
A_namety	absyn.h	/^typedef struct A_namety_ *A_namety;$/;"	t	typeref:struct:A_namety_
A_nametyList	absyn.h	/^typedef struct A_nametyList_ *A_nametyList;$/;"	t	typeref:struct:A_nametyList_
A_nametyList_	absyn.h	/^struct A_nametyList_ {A_namety head; A_nametyList tail;};$/;"	s
A_namety_	absyn.h	/^struct A_namety_ {S_symbol name; A_ty ty;};$/;"	s
A_neqOp	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon1
A_nilExp	absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon6
A_opExp	absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon6
A_oper	absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	t	typeref:enum:__anon1
A_plusOp	absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon1
A_pos	absyn.h	/^typedef int A_pos;$/;"	t
A_recordExp	absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon6
A_recordTy	absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	e	enum:A_ty_::__anon20
A_seqExp	absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon6
A_simpleVar	absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	e	enum:A_var_::__anon2
A_stringExp	absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon6
A_subscriptVar	absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	e	enum:A_var_::__anon2
A_timesOp	absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon1
A_ty	absyn.h	/^typedef struct A_ty_ *A_ty;$/;"	t	typeref:struct:A_ty_
A_ty_	absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	s
A_typeDec	absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	e	enum:A_dec_::__anon17
A_var	absyn.h	/^typedef struct A_var_ *A_var;$/;"	t	typeref:struct:A_var_
A_varDec	absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	e	enum:A_dec_::__anon17
A_varExp	absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon6
A_var_	absyn.h	/^struct A_var_$/;"	s
A_whileExp	absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon6
BEGIN	lex.yy.c	125;"	d	file:
BINOP	tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	union:T_exp_::__anon47	typeref:struct:T_exp_::__anon47::__anon48
BREAK	y.tab.c	/^    BREAK = 296,$/;"	e	enum:yytokentype	file:
BREAK	y.tab.c	204;"	d	file:
BREAK	y.tab.h	/^    BREAK = 296,$/;"	e	enum:yytokentype
BREAK	y.tab.h	133;"	d
Binder	table.c	/^static binder Binder(void *key, void *value, binder next, void *prevtop)$/;"	f	file:
CALL	tree.h	/^		     struct {T_exp fun; T_expList args;} CALL;$/;"	m	union:T_exp_::__anon47	typeref:struct:T_exp_::__anon47::__anon50
CJUMP	tree.h	/^			      Temp_label true, false;} CJUMP;$/;"	m	union:T_stm_::__anon41	typeref:struct:T_stm_::__anon41::__anon44
CODEGEN_H	codegen.h	2;"	d
COLON	y.tab.c	/^    COLON = 262,$/;"	e	enum:yytokentype	file:
COLON	y.tab.c	170;"	d	file:
COLON	y.tab.h	/^    COLON = 262,$/;"	e	enum:yytokentype
COLON	y.tab.h	99;"	d
<<<<<<< HEAD
COL_color	color.c	/^struct COL_result COL_color(G_graph ig, Temp_map initial, Temp_tempList regs) {$/;"	f
COL_result	color.h	/^struct COL_result {Temp_map coloring; Temp_tempList spills;};$/;"	s
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
COMMA	y.tab.c	/^    COMMA = 261,$/;"	e	enum:yytokentype	file:
COMMA	y.tab.c	169;"	d	file:
COMMA	y.tab.h	/^    COMMA = 261,$/;"	e	enum:yytokentype
COMMA	y.tab.h	98;"	d
COMMENTS	lex.yy.c	601;"	d	file:
CONST	tree.h	/^		     int CONST;$/;"	m	union:T_exp_::__anon47
C_basicBlocks	canon.c	/^struct C_block C_basicBlocks(T_stmList stmList)$/;"	f
C_block	canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	s
C_linearize	canon.c	/^T_stmList C_linearize(T_stm stm)$/;"	f
C_stmListList	canon.h	/^typedef struct C_stmListList_ *C_stmListList;$/;"	t	typeref:struct:C_stmListList_
C_stmListList_	canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	s
C_traceSchedule	canon.c	/^T_stmList C_traceSchedule(struct C_block b)$/;"	f
Cx	translate.c	/^struct Cx {$/;"	s	file:
DIVIDE	y.tab.c	/^    DIVIDE = 274,$/;"	e	enum:yytokentype	file:
DIVIDE	y.tab.c	182;"	d	file:
DIVIDE	y.tab.h	/^    DIVIDE = 274,$/;"	e	enum:yytokentype
DIVIDE	y.tab.h	111;"	d
DO	y.tab.c	/^    DO = 291,$/;"	e	enum:yytokentype	file:
DO	y.tab.c	199;"	d	file:
DO	y.tab.h	/^    DO = 291,$/;"	e	enum:yytokentype
DO	y.tab.h	128;"	d
DOT	y.tab.c	/^    DOT = 270,$/;"	e	enum:yytokentype	file:
DOT	y.tab.c	178;"	d	file:
DOT	y.tab.h	/^    DOT = 270,$/;"	e	enum:yytokentype
DOT	y.tab.h	107;"	d
ECHO	lex.yy.c	698;"	d	file:
ELSE	y.tab.c	/^    ELSE = 287,$/;"	e	enum:yytokentype	file:
ELSE	y.tab.c	195;"	d	file:
ELSE	y.tab.h	/^    ELSE = 287,$/;"	e	enum:yytokentype
ELSE	y.tab.h	124;"	d
EM_error	errormsg.c	/^void EM_error(int pos, char *message,...)$/;"	f
EM_newline	errormsg.c	/^void EM_newline(void)$/;"	f
EM_reset	errormsg.c	/^void EM_reset(string fname)$/;"	f
EM_tokPos	errormsg.c	/^int EM_tokPos=0;$/;"	v
END	y.tab.c	/^    END = 294,$/;"	e	enum:yytokentype	file:
END	y.tab.c	202;"	d	file:
END	y.tab.h	/^    END = 294,$/;"	e	enum:yytokentype
END	y.tab.h	131;"	d
ENV_H	env.h	3;"	d
EOB_ACT_CONTINUE_SCAN	lex.yy.c	173;"	d	file:
EOB_ACT_END_OF_FILE	lex.yy.c	174;"	d	file:
EOB_ACT_LAST_MATCH	lex.yy.c	175;"	d	file:
EQ	y.tab.c	/^    EQ = 275,$/;"	e	enum:yytokentype	file:
EQ	y.tab.c	183;"	d	file:
EQ	y.tab.h	/^    EQ = 275,$/;"	e	enum:yytokentype
EQ	y.tab.h	112;"	d
ERROR_MSG_H	errormsg.h	2;"	d
<<<<<<< HEAD
ESCAPE_H	escape.h	2;"	d
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
ESEQ	tree.h	/^		     struct {T_stm stm; T_exp exp;} ESEQ;$/;"	m	union:T_exp_::__anon47	typeref:struct:T_exp_::__anon47::__anon49
EXIT_SUCCESS	y.tab.c	387;"	d	file:
EXIT_SUCCESS	y.tab.c	415;"	d	file:
EXP	tree.h	/^		      T_exp EXP;$/;"	m	union:T_stm_::__anon41
E_FunEntry	env.c	/^E_enventry E_FunEntry(Tr_level level, Temp_label label, Ty_tyList formals, Ty_ty result) {$/;"	f
E_VarEntry	env.c	/^E_enventry E_VarEntry(Tr_access acc, Ty_ty ty) {$/;"	f
E_base_tenv	env.c	/^S_table E_base_tenv(void) {$/;"	f
E_base_venv	env.c	/^S_table E_base_venv(void) {$/;"	f
E_enventry	env.h	/^typedef struct E_enventry_ *E_enventry;$/;"	t	typeref:struct:E_enventry_
E_enventry_	env.h	/^struct E_enventry_ {$/;"	s
E_funEntry	env.h	/^        E_funEntry$/;"	e	enum:E_enventry_::__anon28
E_varEntry	env.h	/^        E_varEntry,$/;"	e	enum:E_enventry_::__anon28
<<<<<<< HEAD
Esc_findEscape	escape.c	/^void Esc_findEscape(A_exp exp) {$/;"	f
ExpRefList	canon.c	/^static expRefList ExpRefList(T_exp *head, expRefList tail)$/;"	f	file:
FALSE	util.h	9;"	d
FG_AssemFlowGraph	flowgraph.c	/^G_graph FG_AssemFlowGraph(AS_instrList il) {$/;"	f
FG_def	flowgraph.c	/^Temp_tempList FG_def(G_node n) {$/;"	f
FG_isMove	flowgraph.c	/^bool FG_isMove(G_node n) {$/;"	f
FG_use	flowgraph.c	/^Temp_tempList FG_use(G_node n) {$/;"	f
=======
ExpRefList	canon.c	/^static expRefList ExpRefList(T_exp *head, expRefList tail)$/;"	f	file:
FALSE	util.h	9;"	d
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
FLEXINT_H	lex.yy.c	29;"	d	file:
FLEX_BETA	lex.yy.c	13;"	d	file:
FLEX_SCANNER	lex.yy.c	8;"	d	file:
FOR	y.tab.c	/^    FOR = 289,$/;"	e	enum:yytokentype	file:
FOR	y.tab.c	197;"	d	file:
FOR	y.tab.h	/^    FOR = 289,$/;"	e	enum:yytokentype
FOR	y.tab.h	126;"	d
FRAME_H	frame.h	5;"	d
FUNCTION	y.tab.c	/^    FUNCTION = 298,$/;"	e	enum:yytokentype	file:
FUNCTION	y.tab.c	206;"	d	file:
FUNCTION	y.tab.h	/^    FUNCTION = 298,$/;"	e	enum:yytokentype
FUNCTION	y.tab.h	135;"	d
F_AccessList	x86frame.c	/^F_accessList F_AccessList(F_access head, F_accessList tail) {$/;"	f
F_Exp	x86frame.c	/^T_exp F_Exp(F_access acc, T_exp framePtr) {$/;"	f
F_FP	x86frame.c	/^Temp_temp F_FP(void) {$/;"	f
F_FragList	x86frame.c	/^F_fragList F_FragList(F_frag head, F_fragList tail) {$/;"	f
F_ProcFrag	x86frame.c	/^F_frag F_ProcFrag(T_stm body, F_frame frame) {$/;"	f
F_RV	x86frame.c	/^Temp_temp F_RV(void) {$/;"	f
<<<<<<< HEAD
F_SP	x86frame.c	/^Temp_temp F_SP(void) {$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
F_StringFrag	x86frame.c	/^F_frag F_StringFrag(Temp_label label, string str) {$/;"	f
F_access	frame.h	/^typedef struct F_access_ *F_access;$/;"	t	typeref:struct:F_access_
F_accessList	frame.h	/^typedef struct F_accessList_ *F_accessList;$/;"	t	typeref:struct:F_accessList_
F_accessList_	frame.h	/^struct F_accessList_ {$/;"	s
F_access_	x86frame.c	/^struct F_access_ {$/;"	s	file:
F_allocLocal	x86frame.c	/^F_access F_allocLocal(F_frame f, bool escape) {$/;"	f
<<<<<<< HEAD
F_calldefs	x86frame.c	/^Temp_tempList F_calldefs() {$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
F_codegen	codegen.c	/^AS_instrList F_codegen(F_frame f, T_stmList stmList) {$/;"	f
F_externalCall	x86frame.c	/^T_exp F_externalCall(string s, T_expList args) {$/;"	f
F_formals	x86frame.c	/^F_accessList F_formals(F_frame f) {$/;"	f
F_frag	frame.h	/^typedef struct F_frag_ *F_frag;$/;"	t	typeref:struct:F_frag_
F_fragList	frame.h	/^typedef struct F_fragList_ *F_fragList;$/;"	t	typeref:struct:F_fragList_
F_fragList_	frame.h	/^struct F_fragList_ {F_frag head; F_fragList tail;};$/;"	s
F_frag_	frame.h	/^struct F_frag_ {enum {F_stringFrag, F_procFrag} kind;$/;"	s
F_frame	frame.h	/^typedef struct F_frame_ *F_frame;$/;"	t	typeref:struct:F_frame_
F_frame_	x86frame.c	/^struct F_frame_ {$/;"	s	file:
F_getlabel	x86frame.c	/^string F_getlabel(F_frame frame) {$/;"	f
F_name	x86frame.c	/^Temp_label F_name(F_frame f) {$/;"	f
F_newFrame	x86frame.c	/^F_frame F_newFrame(Temp_label name, U_boolList formals) {$/;"	f
F_procEntryExit1	x86frame.c	/^T_stm F_procEntryExit1(F_frame frame, T_stm stm) {$/;"	f
<<<<<<< HEAD
F_procEntryExit2	x86frame.c	/^AS_instrList F_procEntryExit2(AS_instrList body) {$/;"	f
F_procEntryExit3	x86frame.c	/^AS_proc F_procEntryExit3(F_frame frame, AS_instrList body) {$/;"	f
F_procFrag	frame.h	/^struct F_frag_ {enum {F_stringFrag, F_procFrag} kind;$/;"	e	enum:F_frag_::__anon32
F_registers	x86frame.c	/^Temp_tempList F_registers(void) {$/;"	f
=======
F_procFrag	frame.h	/^struct F_frag_ {enum {F_stringFrag, F_procFrag} kind;$/;"	e	enum:F_frag_::__anon32
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
F_stringFrag	frame.h	/^struct F_frag_ {enum {F_stringFrag, F_procFrag} kind;$/;"	e	enum:F_frag_::__anon32
F_tempMap	frame.h	/^Temp_map F_tempMap;$/;"	v
F_wordSize	x86frame.c	/^const int F_wordSize = 4;$/;"	v
GE	y.tab.c	/^    GE = 280,$/;"	e	enum:yytokentype	file:
GE	y.tab.c	188;"	d	file:
GE	y.tab.h	/^    GE = 280,$/;"	e	enum:yytokentype
GE	y.tab.h	117;"	d
GT	y.tab.c	/^    GT = 279,$/;"	e	enum:yytokentype	file:
GT	y.tab.c	187;"	d	file:
GT	y.tab.h	/^    GT = 279,$/;"	e	enum:yytokentype
GT	y.tab.h	116;"	d
<<<<<<< HEAD
G_Graph	graph.c	/^G_graph G_Graph(void)$/;"	f
G_Node	graph.c	/^G_node G_Node(G_graph g, void *info)$/;"	f
G_NodeList	graph.c	/^G_nodeList G_NodeList(G_node head, G_nodeList tail)$/;"	f
G_addEdge	graph.c	/^void G_addEdge(G_node from, G_node to) {$/;"	f
G_adj	graph.c	/^G_nodeList G_adj(G_node n) {return cat(G_succ(n), G_pred(n));}$/;"	f
G_degree	graph.c	/^int G_degree(G_node n) {return inDegree(n)+outDegree(n);}$/;"	f
G_empty	graph.c	/^G_table G_empty(void) {$/;"	f
G_enter	graph.c	/^void G_enter(G_table t, G_node node, void *value)$/;"	f
G_goesTo	graph.c	/^bool G_goesTo(G_node from, G_node n) {$/;"	f
G_graph	graph.h	/^typedef struct G_graph_ *G_graph;  \/* The "graph" type *\/$/;"	t	typeref:struct:G_graph_
G_graph_	graph.c	/^struct G_graph_ {int nodecount;$/;"	s	file:
G_inNodeList	graph.c	/^bool G_inNodeList(G_node a, G_nodeList l) {$/;"	f
G_look	graph.c	/^void *G_look(G_table t, G_node node)$/;"	f
G_node	graph.h	/^typedef struct G_node_ *G_node;    \/* The "node" type *\/$/;"	t	typeref:struct:G_node_
G_nodeInfo	graph.c	/^void *G_nodeInfo(G_node n) {return n->info;}$/;"	f
G_nodeList	graph.h	/^typedef struct G_nodeList_ *G_nodeList;$/;"	t	typeref:struct:G_nodeList_
G_nodeList_	graph.h	/^struct G_nodeList_ { G_node head; G_nodeList tail;};$/;"	s
G_node_	graph.c	/^struct G_node_ {$/;"	s	file:
G_nodes	graph.c	/^G_nodeList G_nodes(G_graph g)$/;"	f
G_pred	graph.c	/^G_nodeList G_pred(G_node n) { assert(n); return n->preds; }$/;"	f
G_rmEdge	graph.c	/^void G_rmEdge(G_node from, G_node to) {$/;"	f
G_show	graph.c	/^void G_show(FILE *out, G_nodeList p, void showInfo(void *)) {$/;"	f
G_succ	graph.c	/^G_nodeList G_succ(G_node n) { assert(n); return n->succs; }$/;"	f
G_table	graph.h	/^typedef struct TAB_table_  *G_table;$/;"	t	typeref:struct:TAB_table_
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
ID	y.tab.c	/^    ID = 258,$/;"	e	enum:yytokentype	file:
ID	y.tab.c	166;"	d	file:
ID	y.tab.h	/^    ID = 258,$/;"	e	enum:yytokentype
ID	y.tab.h	95;"	d
IF	y.tab.c	/^    IF = 285,$/;"	e	enum:yytokentype	file:
IF	y.tab.c	193;"	d	file:
IF	y.tab.h	/^    IF = 285,$/;"	e	enum:yytokentype
IF	y.tab.h	122;"	d
IN	y.tab.c	/^    IN = 293,$/;"	e	enum:yytokentype	file:
IN	y.tab.c	201;"	d	file:
IN	y.tab.h	/^    IN = 293,$/;"	e	enum:yytokentype
IN	y.tab.h	130;"	d
INITIAL	lex.yy.c	600;"	d	file:
INT	y.tab.c	/^    INT = 260,$/;"	e	enum:yytokentype	file:
INT	y.tab.c	168;"	d	file:
INT	y.tab.h	/^    INT = 260,$/;"	e	enum:yytokentype
INT	y.tab.h	97;"	d
INT16_MAX	lex.yy.c	71;"	d	file:
INT16_MIN	lex.yy.c	62;"	d	file:
INT32_MAX	lex.yy.c	74;"	d	file:
INT32_MIN	lex.yy.c	65;"	d	file:
INT8_MAX	lex.yy.c	68;"	d	file:
INT8_MIN	lex.yy.c	59;"	d	file:
I_LABEL	assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	e	enum:AS_instr_::__anon23
I_MOVE	assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	e	enum:AS_instr_::__anon23
I_OPER	assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	e	enum:AS_instr_::__anon23
InFrame	x86frame.c	/^static F_access InFrame(int offset) {$/;"	f	file:
InReg	x86frame.c	/^static F_access InReg(Temp_temp reg) {$/;"	f	file:
IntList	errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	t	typeref:struct:intList	file:
JUMP	tree.h	/^		      struct {T_exp exp; Temp_labelList jumps;} JUMP;$/;"	m	union:T_stm_::__anon41	typeref:struct:T_stm_::__anon41::__anon43
<<<<<<< HEAD
L1	hello.tig.s	/^L1:$/;"	l
L2	hello.tig.s	/^L2:$/;"	l
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
LABEL	assem.h	/^		      struct {string assem; Temp_label label;} LABEL;$/;"	m	union:AS_instr_::__anon24	typeref:struct:AS_instr_::__anon24::__anon26
LABEL	tree.h	/^		      Temp_label LABEL;$/;"	m	union:T_stm_::__anon41
LBRACE	y.tab.c	/^    LBRACE = 268,$/;"	e	enum:yytokentype	file:
LBRACE	y.tab.c	176;"	d	file:
LBRACE	y.tab.h	/^    LBRACE = 268,$/;"	e	enum:yytokentype
LBRACE	y.tab.h	105;"	d
LBRACK	y.tab.c	/^    LBRACK = 266,$/;"	e	enum:yytokentype	file:
LBRACK	y.tab.c	174;"	d	file:
LBRACK	y.tab.h	/^    LBRACK = 266,$/;"	e	enum:yytokentype
LBRACK	y.tab.h	103;"	d
LE	y.tab.c	/^    LE = 278,$/;"	e	enum:yytokentype	file:
LE	y.tab.c	186;"	d	file:
LE	y.tab.h	/^    LE = 278,$/;"	e	enum:yytokentype
LE	y.tab.h	115;"	d
LET	y.tab.c	/^    LET = 292,$/;"	e	enum:yytokentype	file:
LET	y.tab.c	200;"	d	file:
LET	y.tab.h	/^    LET = 292,$/;"	e	enum:yytokentype
LET	y.tab.h	129;"	d
LOWER	y.tab.c	/^    LOWER = 301$/;"	e	enum:yytokentype	file:
LOWER	y.tab.c	209;"	d	file:
LOWER	y.tab.h	/^    LOWER = 301$/;"	e	enum:yytokentype
LOWER	y.tab.h	138;"	d
LPAREN	y.tab.c	/^    LPAREN = 264,$/;"	e	enum:yytokentype	file:
LPAREN	y.tab.c	172;"	d	file:
LPAREN	y.tab.h	/^    LPAREN = 264,$/;"	e	enum:yytokentype
LPAREN	y.tab.h	101;"	d
LT	y.tab.c	/^    LT = 277,$/;"	e	enum:yytokentype	file:
LT	y.tab.c	185;"	d	file:
LT	y.tab.h	/^    LT = 277,$/;"	e	enum:yytokentype
LT	y.tab.h	114;"	d
<<<<<<< HEAD
Live_MoveList	liveness.c	/^Live_moveList Live_MoveList(G_node src, G_node dst, Live_moveList tail) {$/;"	f
Live_graph	liveness.h	/^struct Live_graph {$/;"	s
Live_gtemp	liveness.c	/^Temp_temp Live_gtemp(G_node n) {$/;"	f
Live_liveness	liveness.c	/^struct Live_graph Live_liveness(G_graph flow) {$/;"	f
Live_moveList	liveness.h	/^typedef struct Live_moveList_ *Live_moveList;$/;"	t	typeref:struct:Live_moveList_
Live_moveList_	liveness.h	/^struct Live_moveList_ {$/;"	s
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
MAXLEN	lex.yy.c	592;"	d	file:
MEM	tree.h	/^		     T_exp MEM;$/;"	m	union:T_exp_::__anon47
MINUS	y.tab.c	/^    MINUS = 272,$/;"	e	enum:yytokentype	file:
MINUS	y.tab.c	180;"	d	file:
MINUS	y.tab.h	/^    MINUS = 272,$/;"	e	enum:yytokentype
MINUS	y.tab.h	109;"	d
MOVE	assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	union:AS_instr_::__anon24	typeref:struct:AS_instr_::__anon24::__anon27
MOVE	tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	union:T_stm_::__anon41	typeref:struct:T_stm_::__anon41::__anon45
NAME	tree.h	/^		     Temp_label NAME;$/;"	m	union:T_exp_::__anon47
NEQ	y.tab.c	/^    NEQ = 276,$/;"	e	enum:yytokentype	file:
NEQ	y.tab.c	184;"	d	file:
NEQ	y.tab.h	/^    NEQ = 276,$/;"	e	enum:yytokentype
NEQ	y.tab.h	113;"	d
NIL	y.tab.c	/^    NIL = 297,$/;"	e	enum:yytokentype	file:
NIL	y.tab.c	205;"	d	file:
NIL	y.tab.h	/^    NIL = 297,$/;"	e	enum:yytokentype
NIL	y.tab.h	134;"	d
OF	y.tab.c	/^    OF = 295,$/;"	e	enum:yytokentype	file:
OF	y.tab.c	203;"	d	file:
OF	y.tab.h	/^    OF = 295,$/;"	e	enum:yytokentype
OF	y.tab.h	132;"	d
OPER	assem.h	/^			      AS_targets jumps;} OPER;$/;"	m	union:AS_instr_::__anon24	typeref:struct:AS_instr_::__anon24::__anon25
OR	y.tab.c	/^    OR = 282,$/;"	e	enum:yytokentype	file:
OR	y.tab.c	190;"	d	file:
OR	y.tab.h	/^    OR = 282,$/;"	e	enum:yytokentype
OR	y.tab.h	119;"	d
PLUS	y.tab.c	/^    PLUS = 271,$/;"	e	enum:yytokentype	file:
PLUS	y.tab.c	179;"	d	file:
PLUS	y.tab.h	/^    PLUS = 271,$/;"	e	enum:yytokentype
PLUS	y.tab.h	108;"	d
PRINT_TREE_H	printtree.h	2;"	d
PatchList	translate.c	/^static patchList PatchList(Temp_label *head, patchList tail) {$/;"	f	file:
<<<<<<< HEAD
RA_regAlloc	regalloc.c	/^struct RA_result RA_regAlloc(F_frame f, AS_instrList il) {$/;"	f
RA_result	regalloc.h	/^struct RA_result {Temp_map coloring; AS_instrList il;};$/;"	s
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
RBRACE	y.tab.c	/^    RBRACE = 269,$/;"	e	enum:yytokentype	file:
RBRACE	y.tab.c	177;"	d	file:
RBRACE	y.tab.h	/^    RBRACE = 269,$/;"	e	enum:yytokentype
RBRACE	y.tab.h	106;"	d
RBRACK	y.tab.c	/^    RBRACK = 267,$/;"	e	enum:yytokentype	file:
RBRACK	y.tab.c	175;"	d	file:
RBRACK	y.tab.h	/^    RBRACK = 267,$/;"	e	enum:yytokentype
RBRACK	y.tab.h	104;"	d
REJECT	lex.yy.c	559;"	d	file:
RPAREN	y.tab.c	/^    RPAREN = 265,$/;"	e	enum:yytokentype	file:
RPAREN	y.tab.c	173;"	d	file:
RPAREN	y.tab.h	/^    RPAREN = 265,$/;"	e	enum:yytokentype
RPAREN	y.tab.h	102;"	d
SEMANT_H	semant.h	2;"	d
SEMICOLON	y.tab.c	/^    SEMICOLON = 263,$/;"	e	enum:yytokentype	file:
SEMICOLON	y.tab.c	171;"	d	file:
SEMICOLON	y.tab.h	/^    SEMICOLON = 263,$/;"	e	enum:yytokentype
SEMICOLON	y.tab.h	100;"	d
SEM_transProg	semant.c	/^F_fragList SEM_transProg(A_exp exp) {$/;"	f
SEQ	tree.h	/^	       union {struct {T_stm left, right;} SEQ;$/;"	m	union:T_stm_::__anon41	typeref:struct:T_stm_::__anon41::__anon42
SIZE	symbol.c	16;"	d	file:
STRING	y.tab.c	/^    STRING = 259,$/;"	e	enum:yytokentype	file:
STRING	y.tab.c	167;"	d	file:
STRING	y.tab.h	/^    STRING = 259,$/;"	e	enum:yytokentype
STRING	y.tab.h	96;"	d
STRINGS	lex.yy.c	602;"	d	file:
SYMBOL_H	symbol.h	2;"	d
S_Symbol	symbol.c	/^S_symbol S_Symbol(string name)$/;"	f
S_beginScope	symbol.c	/^void S_beginScope(S_table t)$/;"	f
S_dump	symbol.c	/^void S_dump(S_table t, void (*show)(S_symbol sym, void *binding)) {$/;"	f
S_empty	symbol.c	/^S_table S_empty(void) $/;"	f
S_endScope	symbol.c	/^void S_endScope(S_table t)$/;"	f
S_enter	symbol.c	/^void S_enter(S_table t, S_symbol sym, void *value) {$/;"	f
S_look	symbol.c	/^void *S_look(S_table t, S_symbol sym) {$/;"	f
S_name	symbol.c	/^string S_name(S_symbol sym)$/;"	f
S_symbol	symbol.h	/^typedef struct S_symbol_ *S_symbol;$/;"	t	typeref:struct:S_symbol_
S_symbol_	symbol.c	/^struct S_symbol_ {string name; S_symbol next;};$/;"	s	file:
S_table	symbol.h	/^typedef struct TAB_table_ *S_table;$/;"	t	typeref:struct:TAB_table_
StmExp	canon.c	/^static struct stmExp StmExp(T_stm stm, T_exp exp) {$/;"	f	file:
StmListList	canon.c	/^static C_stmListList StmListList(T_stmList head, C_stmListList tail)$/;"	f	file:
String	util.c	/^string String(char *s)$/;"	f
TABLE_H	table.h	2;"	d
TABSIZE	table.c	10;"	d	file:
TAB_dump	table.c	/^void TAB_dump(TAB_table t, void (*show)(void *key, void *value)) {$/;"	f
TAB_empty	table.c	/^TAB_table TAB_empty(void)$/;"	f
TAB_enter	table.c	/^void TAB_enter(TAB_table t, void *key, void *value)$/;"	f
TAB_look	table.c	/^void *TAB_look(TAB_table t, void *key)$/;"	f
TAB_pop	table.c	/^void *TAB_pop(TAB_table t) {$/;"	f
TAB_table	table.h	/^typedef struct TAB_table_ *TAB_table;$/;"	t	typeref:struct:TAB_table_
TAB_table_	table.c	/^struct TAB_table_ {$/;"	s	file:
TEMP	tree.h	/^		     Temp_temp TEMP;$/;"	m	union:T_exp_::__anon47
TEMP_H	temp.h	7;"	d
THEN	y.tab.c	/^    THEN = 286,$/;"	e	enum:yytokentype	file:
THEN	y.tab.c	194;"	d	file:
THEN	y.tab.h	/^    THEN = 286,$/;"	e	enum:yytokentype
THEN	y.tab.h	123;"	d
TIMES	y.tab.c	/^    TIMES = 273,$/;"	e	enum:yytokentype	file:
TIMES	y.tab.c	181;"	d	file:
TIMES	y.tab.h	/^    TIMES = 273,$/;"	e	enum:yytokentype
TIMES	y.tab.h	110;"	d
TO	y.tab.c	/^    TO = 290,$/;"	e	enum:yytokentype	file:
TO	y.tab.c	198;"	d	file:
TO	y.tab.h	/^    TO = 290,$/;"	e	enum:yytokentype
TO	y.tab.h	127;"	d
TRANSLATE_H	translate.h	2;"	d
TREE_H	tree.h	6;"	d
TRUE	util.h	8;"	d
TYPE	y.tab.c	/^    TYPE = 300,$/;"	e	enum:yytokentype	file:
TYPE	y.tab.c	208;"	d	file:
TYPE	y.tab.h	/^    TYPE = 300,$/;"	e	enum:yytokentype
TYPE	y.tab.h	137;"	d
TYPES_H	types.h	2;"	d
T_BINOP	tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon46
T_Binop	tree.c	/^T_exp T_Binop(T_binOp op, T_exp left, T_exp right)$/;"	f
T_CALL	tree.h	/^		      T_CONST, T_CALL} kind;$/;"	e	enum:T_exp_::__anon46
T_CJUMP	tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon40
T_CONST	tree.h	/^		      T_CONST, T_CALL} kind;$/;"	e	enum:T_exp_::__anon46
T_Call	tree.c	/^T_exp T_Call(T_exp fun, T_expList args)$/;"	f
T_Cjump	tree.c	/^T_stm T_Cjump(T_relOp op, T_exp left, T_exp right, $/;"	f
T_Const	tree.c	/^T_exp T_Const(int consti)$/;"	f
T_ESEQ	tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon46
T_EXP	tree.h	/^		       T_EXP} kind;$/;"	e	enum:T_stm_::__anon40
T_Eseq	tree.c	/^T_exp T_Eseq(T_stm stm, T_exp exp)$/;"	f
T_Exp	tree.c	/^T_stm T_Exp(T_exp exp)$/;"	f
T_ExpList	tree.c	/^T_expList T_ExpList(T_exp head, T_expList tail)$/;"	f
T_JUMP	tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon40
T_Jump	tree.c	/^T_stm T_Jump(T_exp exp, Temp_labelList labels)$/;"	f
T_LABEL	tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon40
T_Label	tree.c	/^T_stm T_Label(Temp_label label)$/;"	f
T_MEM	tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon46
T_MOVE	tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon40
T_Mem	tree.c	/^T_exp T_Mem(T_exp exp)$/;"	f
T_Move	tree.c	/^T_stm T_Move(T_exp dst, T_exp src)$/;"	f
T_NAME	tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon46
T_Name	tree.c	/^T_exp T_Name(Temp_label name)$/;"	f
T_SEQ	tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon40
T_Seq	tree.c	/^T_stm T_Seq(T_stm left, T_stm right)$/;"	f
T_StmList	tree.c	/^T_stmList T_StmList(T_stm head, T_stmList tail)$/;"	f
T_TEMP	tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon46
T_Temp	tree.c	/^T_exp T_Temp(Temp_temp temp)$/;"	f
T_and	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon38
T_arshift	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon38
T_binOp	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	t	typeref:enum:__anon38
T_commute	tree.c	/^T_relOp T_commute(T_relOp r)$/;"	f
T_div	tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon38
T_eq	tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon39
T_exp	tree.h	/^typedef struct T_exp_ *T_exp;$/;"	t	typeref:struct:T_exp_
T_expList	tree.h	/^typedef struct T_expList_ *T_expList;$/;"	t	typeref:struct:T_expList_
T_expList_	tree.h	/^struct T_expList_ {T_exp head; T_expList tail;};$/;"	s
T_exp_	tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	s
T_ge	tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon39
T_gt	tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon39
T_le	tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon39
T_lshift	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon38
T_lt	tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon39
T_minus	tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon38
T_mul	tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon38
T_ne	tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon39
T_notRel	tree.c	/^T_relOp T_notRel(T_relOp r)$/;"	f
T_or	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon38
T_plus	tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon38
T_relOp	tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	t	typeref:enum:__anon39
T_rshift	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon38
T_stm	tree.h	/^typedef struct T_stm_ *T_stm;$/;"	t	typeref:struct:T_stm_
T_stmList	tree.h	/^typedef struct T_stmList_ *T_stmList;$/;"	t	typeref:struct:T_stmList_
T_stmList_	tree.h	/^struct T_stmList_ {T_stm head; T_stmList tail;};$/;"	s
T_stm_	tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	s
T_uge	tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon39
T_ugt	tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon39
T_ule	tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon39
T_ult	tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon39
T_xor	tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon38
Temp_LabelList	temp.c	/^Temp_labelList Temp_LabelList(Temp_label h, Temp_labelList t)$/;"	f
Temp_TempList	temp.c	/^Temp_tempList Temp_TempList(Temp_temp h, Temp_tempList t) $/;"	f
<<<<<<< HEAD
Temp_deepCopy	temp.c	/^Temp_tempList Temp_deepCopy(Temp_tempList origin) {$/;"	f
Temp_dumpMap	temp.c	/^void Temp_dumpMap(FILE *out, Temp_map m) {$/;"	f
Temp_empty	temp.c	/^Temp_map Temp_empty(void) {$/;"	f
Temp_enter	temp.c	/^void Temp_enter(Temp_map m, Temp_temp t, string s) {$/;"	f
Temp_isEqual	temp.c	/^bool Temp_isEqual(Temp_tempList left, Temp_tempList right) {$/;"	f
=======
Temp_dumpMap	temp.c	/^void Temp_dumpMap(FILE *out, Temp_map m) {$/;"	f
Temp_empty	temp.c	/^Temp_map Temp_empty(void) {$/;"	f
Temp_enter	temp.c	/^void Temp_enter(Temp_map m, Temp_temp t, string s) {$/;"	f
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
Temp_label	temp.h	/^typedef S_symbol Temp_label;$/;"	t
Temp_labelList	temp.h	/^typedef struct Temp_labelList_ *Temp_labelList;$/;"	t	typeref:struct:Temp_labelList_
Temp_labelList_	temp.h	/^struct Temp_labelList_ { Temp_label head; Temp_labelList tail;};$/;"	s
Temp_labelstring	temp.c	/^string Temp_labelstring(Temp_label s)$/;"	f
Temp_layerMap	temp.c	/^Temp_map Temp_layerMap(Temp_map over, Temp_map under) {$/;"	f
<<<<<<< HEAD
Temp_listSize	temp.c	/^int Temp_listSize(Temp_tempList tl) {$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
Temp_look	temp.c	/^string Temp_look(Temp_map m, Temp_temp t) {$/;"	f
Temp_map	temp.h	/^typedef struct Temp_map_ *Temp_map;$/;"	t	typeref:struct:Temp_map_
Temp_map_	temp.c	/^struct Temp_map_ {TAB_table tab; Temp_map under;};$/;"	s	file:
Temp_name	temp.c	/^Temp_map Temp_name(void) {$/;"	f
Temp_namedlabel	temp.c	/^Temp_label Temp_namedlabel(string s)$/;"	f
Temp_newlabel	temp.c	/^Temp_label Temp_newlabel(void)$/;"	f
Temp_newtemp	temp.c	/^Temp_temp Temp_newtemp(void)$/;"	f
<<<<<<< HEAD
Temp_printList	temp.c	/^void Temp_printList(Temp_tempList tl) {$/;"	f
Temp_subtraction	temp.c	/^Temp_tempList Temp_subtraction(Temp_tempList left, Temp_tempList right) {$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
Temp_temp	temp.h	/^typedef struct Temp_temp_ *Temp_temp;$/;"	t	typeref:struct:Temp_temp_
Temp_tempList	temp.h	/^typedef struct Temp_tempList_ *Temp_tempList;$/;"	t	typeref:struct:Temp_tempList_
Temp_tempList_	temp.h	/^struct Temp_tempList_ { Temp_temp head; Temp_tempList tail;};$/;"	s
Temp_temp_	temp.c	/^struct Temp_temp_ {int num;};$/;"	s	file:
<<<<<<< HEAD
Temp_union	temp.c	/^Temp_tempList Temp_union(Temp_tempList left, Temp_tempList right) {$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
Tr_Access	translate.c	/^Tr_access Tr_Access(Tr_level level, F_access facc) {$/;"	f
Tr_AccessList	translate.c	/^Tr_accessList Tr_AccessList(Tr_access head, Tr_accessList tail) {$/;"	f
Tr_Cx	translate.c	/^static Tr_exp Tr_Cx(patchList trues, patchList falses, T_stm stm) {$/;"	f	file:
Tr_Ex	translate.c	/^static Tr_exp Tr_Ex(T_exp ex) {$/;"	f	file:
Tr_ExpList	translate.c	/^Tr_expList Tr_ExpList(Tr_exp head, Tr_expList tail) {$/;"	f
Tr_Nx	translate.c	/^static Tr_exp Tr_Nx(T_stm nx) {$/;"	f	file:
Tr_StaticLink	translate.c	/^Tr_exp Tr_StaticLink(Tr_level now, Tr_level def) {$/;"	f
Tr_access	translate.h	/^typedef struct Tr_access_ *Tr_access;$/;"	t	typeref:struct:Tr_access_
Tr_accessList	translate.h	/^typedef struct Tr_accessList_ *Tr_accessList;$/;"	t	typeref:struct:Tr_accessList_
Tr_accessList_	translate.h	/^struct Tr_accessList_ {$/;"	s
Tr_access_	translate.c	/^struct Tr_access_ {$/;"	s	file:
Tr_allocLocal	translate.c	/^Tr_access Tr_allocLocal(Tr_level level, bool escape) {$/;"	f
Tr_arrayExp	translate.c	/^Tr_exp Tr_arrayExp(Tr_exp size, Tr_exp init) {$/;"	f
Tr_assignExp	translate.c	/^Tr_exp Tr_assignExp(Tr_exp left, Tr_exp right) {$/;"	f
Tr_binOpExp	translate.c	/^Tr_exp Tr_binOpExp(A_oper oper, Tr_exp left, Tr_exp right) {$/;"	f
Tr_breakExp	translate.c	/^Tr_exp Tr_breakExp() {$/;"	f
Tr_callExp	translate.c	/^Tr_exp Tr_callExp(Temp_label label, Tr_level funcLevel, Tr_level level, Tr_expList expList) {$/;"	f
Tr_cx	translate.c	/^        Tr_ex, Tr_nx, Tr_cx$/;"	e	enum:Tr_exp_::__anon36	file:
Tr_doneExp	translate.c	/^Tr_exp Tr_doneExp() {$/;"	f
Tr_ex	translate.c	/^        Tr_ex, Tr_nx, Tr_cx$/;"	e	enum:Tr_exp_::__anon36	file:
Tr_exp	translate.h	/^typedef struct Tr_exp_ *Tr_exp;$/;"	t	typeref:struct:Tr_exp_
Tr_expList	translate.h	/^typedef struct Tr_expList_ *Tr_expList;$/;"	t	typeref:struct:Tr_expList_
Tr_expList_	translate.c	/^struct Tr_expList_ {$/;"	s	file:
Tr_exp_	translate.c	/^struct Tr_exp_ {$/;"	s	file:
Tr_fieldVar	translate.c	/^Tr_exp Tr_fieldVar(Tr_exp base, int offset) {$/;"	f
Tr_forExp	translate.c	/^Tr_exp Tr_forExp(Tr_exp lo, Tr_exp hi, Tr_exp body, Tr_access acc) {$/;"	f
Tr_formals	translate.c	/^Tr_accessList Tr_formals(Tr_level l) {$/;"	f
Tr_functionDec	translate.c	/^Tr_exp Tr_functionDec(Tr_expList function) {$/;"	f
Tr_getResult	translate.c	/^F_fragList Tr_getResult(void) {$/;"	f
Tr_ifExp	translate.c	/^Tr_exp Tr_ifExp(Tr_exp test, Tr_exp then, Tr_exp elsee) {$/;"	f
Tr_intExp	translate.c	/^Tr_exp Tr_intExp(int i) {$/;"	f
Tr_letExp	translate.c	/^Tr_exp Tr_letExp(Tr_expList decs, Tr_exp body) {$/;"	f
Tr_level	translate.h	/^typedef struct Tr_level_ *Tr_level;$/;"	t	typeref:struct:Tr_level_
Tr_level_	translate.h	/^struct Tr_level_ {$/;"	s
Tr_newLevel	translate.c	/^Tr_level Tr_newLevel(Tr_level parent, Temp_label name, U_boolList formals) {$/;"	f
Tr_nilExp	translate.c	/^Tr_exp Tr_nilExp(void) {$/;"	f
Tr_nx	translate.c	/^        Tr_ex, Tr_nx, Tr_cx$/;"	e	enum:Tr_exp_::__anon36	file:
Tr_outermost	translate.c	/^Tr_level Tr_outermost(void) {$/;"	f
Tr_procEntryExit	translate.c	/^void Tr_procEntryExit(Tr_level level, Tr_exp body, Tr_accessList formals) {$/;"	f
Tr_recordExp	translate.c	/^Tr_exp Tr_recordExp(int num, Tr_expList fields) {$/;"	f
Tr_relOpExp	translate.c	/^Tr_exp Tr_relOpExp(A_oper oper, Tr_exp left, Tr_exp right) {$/;"	f
Tr_seqExp	translate.c	/^Tr_exp Tr_seqExp(Tr_expList expList) {$/;"	f
Tr_simpleVar	translate.c	/^Tr_exp Tr_simpleVar(Tr_access acc, Tr_level l) {$/;"	f
Tr_stringExp	translate.c	/^Tr_exp Tr_stringExp(string str) {$/;"	f
Tr_subscriptVar	translate.c	/^Tr_exp Tr_subscriptVar(Tr_exp base, Tr_exp index) {$/;"	f
Tr_typeDec	translate.c	/^Tr_exp Tr_typeDec(Tr_expList type) {$/;"	f
Tr_varDec	translate.c	/^Tr_exp Tr_varDec(Tr_exp init, Tr_access acc) {$/;"	f
Tr_whileExp	translate.c	/^Tr_exp Tr_whileExp(Tr_exp test, Tr_exp body, Tr_exp done) {$/;"	f
TyList_print	types.c	/^void TyList_print(Ty_tyList list)$/;"	f
Ty_Array	types.c	/^Ty_ty Ty_Array(Ty_ty ty)$/;"	f
Ty_Field	types.c	/^Ty_field Ty_Field(S_symbol name, Ty_ty ty)$/;"	f
Ty_FieldList	types.c	/^Ty_fieldList Ty_FieldList(Ty_field head, Ty_fieldList tail)$/;"	f
Ty_Int	types.c	/^Ty_ty Ty_Int(void) {return &tyint;}$/;"	f
Ty_Name	types.c	/^Ty_ty Ty_Name(S_symbol sym, Ty_ty ty)$/;"	f
Ty_Nil	types.c	/^Ty_ty Ty_Nil(void) {return &tynil;}$/;"	f
Ty_Record	types.c	/^Ty_ty Ty_Record(Ty_fieldList fields)$/;"	f
Ty_String	types.c	/^Ty_ty Ty_String(void) {return &tystring;}$/;"	f
Ty_TyList	types.c	/^Ty_tyList Ty_TyList(Ty_ty head, Ty_tyList tail)$/;"	f
Ty_Void	types.c	/^Ty_ty Ty_Void(void) {return &tyvoid;}$/;"	f
Ty_array	types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon51
Ty_cmp	semant.c	/^bool Ty_cmp(Ty_ty tt, Ty_ty ee) {$/;"	f
Ty_field	types.h	/^typedef struct Ty_field_ *Ty_field;$/;"	t	typeref:struct:Ty_field_
Ty_fieldList	types.h	/^typedef struct Ty_fieldList_ *Ty_fieldList;$/;"	t	typeref:struct:Ty_fieldList_
Ty_fieldList_	types.h	/^struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};$/;"	s
Ty_field_	types.h	/^struct Ty_field_ {S_symbol name; Ty_ty ty;};$/;"	s
Ty_int	types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon51
Ty_name	types.h	/^		       Ty_name, Ty_void} kind;$/;"	e	enum:Ty_ty_::__anon51
Ty_nil	types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon51
Ty_print	types.c	/^void Ty_print(Ty_ty t)$/;"	f
Ty_record	types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon51
Ty_string	types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon51
Ty_ty	types.h	/^typedef struct Ty_ty_ *Ty_ty;$/;"	t	typeref:struct:Ty_ty_
Ty_tyList	types.h	/^typedef struct Ty_tyList_ *Ty_tyList;$/;"	t	typeref:struct:Ty_tyList_
Ty_tyList_	types.h	/^struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};$/;"	s
Ty_ty_	types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	s
Ty_void	types.h	/^		       Ty_name, Ty_void} kind;$/;"	e	enum:Ty_ty_::__anon51
UINT16_MAX	lex.yy.c	80;"	d	file:
UINT32_MAX	lex.yy.c	83;"	d	file:
UINT8_MAX	lex.yy.c	77;"	d	file:
UTIL_H	util.h	2;"	d
U_BoolList	util.c	/^U_boolList U_BoolList(bool head, U_boolList tail)$/;"	f
U_boolList	util.h	/^typedef struct U_boolList_ *U_boolList;$/;"	t	typeref:struct:U_boolList_
U_boolList_	util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	s
VAR	y.tab.c	/^    VAR = 299,$/;"	e	enum:yytokentype	file:
VAR	y.tab.c	207;"	d	file:
VAR	y.tab.h	/^    VAR = 299,$/;"	e	enum:yytokentype
VAR	y.tab.h	136;"	d
WHILE	y.tab.c	/^    WHILE = 288,$/;"	e	enum:yytokentype	file:
WHILE	y.tab.c	196;"	d	file:
WHILE	y.tab.h	/^    WHILE = 288,$/;"	e	enum:yytokentype
WHILE	y.tab.h	125;"	d
YYABORT	y.tab.c	806;"	d	file:
YYACCEPT	y.tab.c	805;"	d	file:
YYBACKUP	y.tab.c	812;"	d	file:
YYBISON	y.tab.c	44;"	d	file:
YYBISON_VERSION	y.tab.c	47;"	d	file:
YYCASE_	y.tab.c	1153;"	d	file:
YYCASE_	y.tab.c	1163;"	d	file:
YYCOPY	y.tab.c	479;"	d	file:
YYCOPY	y.tab.c	482;"	d	file:
YYCOPY_NEEDED	y.tab.c	454;"	d	file:
YYDEBUG	y.tab.c	108;"	d	file:
YYDEBUG	y.tab.h	37;"	d
YYDPRINTF	y.tab.c	843;"	d	file:
YYDPRINTF	y.tab.c	958;"	d	file:
YYEMPTY	y.tab.c	802;"	d	file:
YYEOF	y.tab.c	803;"	d	file:
YYERRCODE	y.tab.c	831;"	d	file:
YYERROR	y.tab.c	807;"	d	file:
YYERROR_VERBOSE	y.tab.c	96;"	d	file:
YYERROR_VERBOSE	y.tab.c	97;"	d	file:
YYERROR_VERBOSE	y.tab.c	99;"	d	file:
YYFINAL	y.tab.c	495;"	d	file:
YYFPRINTF	y.tab.c	840;"	d	file:
YYFREE	y.tab.c	425;"	d	file:
YYINITDEPTH	y.tab.c	967;"	d	file:
YYLAST	y.tab.c	497;"	d	file:
YYMALLOC	y.tab.c	419;"	d	file:
YYMAXDEPTH	y.tab.c	978;"	d	file:
YYMAXUTOK	y.tab.c	511;"	d	file:
YYNNTS	y.tab.c	502;"	d	file:
YYNRULES	y.tab.c	504;"	d	file:
YYNSTATES	y.tab.c	506;"	d	file:
YYNTOKENS	y.tab.c	500;"	d	file:
YYPACT_NINF	y.tab.c	602;"	d	file:
YYPOPSTACK	y.tab.c	1278;"	d	file:
YYPULL	y.tab.c	59;"	d	file:
YYPURE	y.tab.c	53;"	d	file:
YYPUSH	y.tab.c	56;"	d	file:
YYRECOVERING	y.tab.c	810;"	d	file:
YYSIZE_MAXIMUM	y.tab.c	298;"	d	file:
YYSIZE_T	y.tab.c	287;"	d	file:
YYSIZE_T	y.tab.c	289;"	d	file:
YYSIZE_T	y.tab.c	292;"	d	file:
YYSIZE_T	y.tab.c	294;"	d	file:
YYSKELETON_NAME	y.tab.c	50;"	d	file:
YYSTACK_ALLOC	y.tab.c	373;"	d	file:
YYSTACK_ALLOC	y.tab.c	377;"	d	file:
YYSTACK_ALLOC	y.tab.c	382;"	d	file:
YYSTACK_ALLOC	y.tab.c	405;"	d	file:
YYSTACK_ALLOC_MAXIMUM	y.tab.c	402;"	d	file:
YYSTACK_ALLOC_MAXIMUM	y.tab.c	408;"	d	file:
YYSTACK_BYTES	y.tab.c	450;"	d	file:
YYSTACK_FREE	y.tab.c	396;"	d	file:
YYSTACK_FREE	y.tab.c	406;"	d	file:
YYSTACK_GAP_MAXIMUM	y.tab.c	446;"	d	file:
YYSTACK_RELOCATE	y.tab.c	461;"	d	file:
YYSTATE	lex.yy.c	132;"	d	file:
YYSTYPE	y.tab.c	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	y.tab.c	/^union YYSTYPE$/;"	u	file:
YYSTYPE	y.tab.h	/^typedef union YYSTYPE YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE	y.tab.h	/^union YYSTYPE$/;"	u
YYSTYPE_IS_DECLARED	y.tab.c	243;"	d	file:
YYSTYPE_IS_DECLARED	y.tab.h	172;"	d
YYSTYPE_IS_TRIVIAL	y.tab.c	242;"	d	file:
YYSTYPE_IS_TRIVIAL	y.tab.h	171;"	d
YYTABLES_NAME	lex.yy.c	2188;"	d	file:
YYTABLE_NINF	y.tab.c	607;"	d	file:
YYTERROR	y.tab.c	830;"	d	file:
YYTOKENTYPE	y.tab.c	116;"	d	file:
YYTOKENTYPE	y.tab.h	45;"	d
YYTRANSLATE	y.tab.c	513;"	d	file:
YYUNDEFTOK	y.tab.c	510;"	d	file:
YYUSE	y.tab.c	341;"	d	file:
YYUSE	y.tab.c	343;"	d	file:
YY_	y.tab.c	304;"	d	file:
YY_	y.tab.c	308;"	d	file:
YY_ATTRIBUTE	y.tab.c	316;"	d	file:
YY_ATTRIBUTE	y.tab.c	318;"	d	file:
YY_ATTRIBUTE_PURE	y.tab.c	323;"	d	file:
YY_ATTRIBUTE_UNUSED	y.tab.c	327;"	d	file:
YY_AT_BOL	lex.yy.c	340;"	d	file:
YY_BREAK	lex.yy.c	777;"	d	file:
YY_BUFFER_EOF_PENDING	lex.yy.c	256;"	d	file:
YY_BUFFER_NEW	lex.yy.c	244;"	d	file:
YY_BUFFER_NORMAL	lex.yy.c	245;"	d	file:
YY_BUFFER_STATE	lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	lex.yy.c	149;"	d	file:
YY_BUF_SIZE	lex.yy.c	151;"	d	file:
YY_CHAR	lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	lex.yy.c	272;"	d	file:
YY_CURRENT_BUFFER_LVALUE	lex.yy.c	279;"	d	file:
YY_DECL	lex.yy.c	765;"	d	file:
YY_DECL_IS_OURS	lex.yy.c	761;"	d	file:
YY_DO_BEFORE_ACTION	lex.yy.c	369;"	d	file:
YY_END_OF_BUFFER	lex.yy.c	377;"	d	file:
YY_END_OF_BUFFER_CHAR	lex.yy.c	140;"	d	file:
YY_EXIT_FAILURE	lex.yy.c	1984;"	d	file:
YY_EXTRA_TYPE	lex.yy.c	613;"	d	file:
YY_FATAL_ERROR	lex.yy.c	752;"	d	file:
YY_FLEX_MAJOR_VERSION	lex.yy.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	lex.yy.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	lex.yy.c	11;"	d	file:
YY_FLUSH_BUFFER	lex.yy.c	308;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	y.tab.c	348;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	y.tab.c	358;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	y.tab.c	352;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	y.tab.c	359;"	d	file:
YY_INITIAL_VALUE	y.tab.c	355;"	d	file:
YY_INITIAL_VALUE	y.tab.c	362;"	d	file:
YY_INPUT	lex.yy.c	705;"	d	file:
YY_INT_ALIGNED	lex.yy.c	4;"	d	file:
YY_LESS_LINENO	lex.yy.c	177;"	d	file:
YY_LINENO_REWIND_TO	lex.yy.c	178;"	d	file:
YY_LOCATION_PRINT	y.tab.c	851;"	d	file:
YY_MORE_ADJ	lex.yy.c	561;"	d	file:
YY_NEW_FILE	lex.yy.c	138;"	d	file:
YY_NULL	lex.yy.c	112;"	d	file:
YY_NULLPTR	y.tab.c	88;"	d	file:
YY_NULLPTR	y.tab.c	90;"	d	file:
YY_NUM_RULES	lex.yy.c	376;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	687;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	689;"	d	file:
YY_REDUCE_PRINT	y.tab.c	948;"	d	file:
YY_REDUCE_PRINT	y.tab.c	961;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	lex.yy.c	562;"	d	file:
YY_RULE_SETUP	lex.yy.c	780;"	d	file:
YY_SC_TO_UI	lex.yy.c	119;"	d	file:
YY_STACK_PRINT	y.tab.c	917;"	d	file:
YY_STACK_PRINT	y.tab.c	960;"	d	file:
YY_START	lex.yy.c	131;"	d	file:
YY_START_STACK_INCR	lex.yy.c	747;"	d	file:
YY_STATE_BUF_SIZE	lex.yy.c	157;"	d	file:
YY_STATE_EOF	lex.yy.c	135;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	lex.yy.c	197;"	d	file:
YY_SYMBOL_PRINT	y.tab.c	855;"	d	file:
YY_SYMBOL_PRINT	y.tab.c	959;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	lex.yy.c	160;"	d	file:
YY_TYPEDEF_YY_SIZE_T	lex.yy.c	165;"	d	file:
YY_USER_ACTION	lex.yy.c	772;"	d	file:
YY_USE_CONST	lex.yy.c	100;"	d	file:
YY_USE_CONST	lex.yy.c	93;"	d	file:
YY_YY_Y_TAB_H_INCLUDED	y.tab.c	105;"	d	file:
YY_YY_Y_TAB_H_INCLUDED	y.tab.h	34;"	d
_Noreturn	y.tab.c	333;"	d	file:
_Noreturn	y.tab.c	335;"	d	file:
__STDC_LIMIT_MACROS	lex.yy.c	39;"	d	file:
<<<<<<< HEAD
__wrap_getchar	runtime.c	/^struct string *__wrap_getchar()$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
absyn_root	y.tab.c	/^A_exp absyn_root;$/;"	v
access	env.h	/^            Tr_access access;$/;"	m	struct:E_enventry_::__anon29::__anon30
access	translate.c	/^   F_access access;$/;"	m	struct:Tr_access_	file:
actual_ty	semant.c	/^Ty_ty actual_ty(Ty_ty ty) {$/;"	f
<<<<<<< HEAD
addl	hello.tig.s	/^addl %edx, %eax$/;"	l
adjust	lex.yy.c	/^void adjust(void)$/;"	f
allocRecord	runtime.c	/^int *allocRecord(int size)$/;"	f
=======
adjust	lex.yy.c	/^void adjust(void)$/;"	f
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
alloca	y.tab.c	380;"	d	file:
anyErrors	errormsg.c	/^bool anyErrors= FALSE;$/;"	v
argList	tiger.y	/^argList :   exp _argList        {$$ = A_ExpList($1, $2);}$/;"	l
args	absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	struct:A_exp_::__anon7::__anon8
args	tree.h	/^		     struct {T_exp fun; T_expList args;} CALL;$/;"	m	struct:T_exp_::__anon47::__anon50
array	absyn.h	/^		     S_symbol array;$/;"	m	union:A_ty_::__anon21
array	absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon16
array	types.h	/^		      Ty_ty array;$/;"	m	union:Ty_ty_::__anon52
arrayExp	tiger.y	/^arrayExp:   ID LBRACK exp RBRACK OF exp {$$ = A_ArrayExp(EM_tokPos, S_Symbol($1), $3, $6);}$/;"	l
arrayTy	tiger.y	/^arrayTy :   ARRAY  OF        ID     {$$ = A_ArrayTy(EM_tokPos, S_Symbol($3));}$/;"	l
assem	assem.h	/^		      struct {string assem; Temp_label label;} LABEL;$/;"	m	struct:AS_instr_::__anon24::__anon26
assem	assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon24::__anon27
assem	assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon24::__anon25
assign	absyn.h	/^	      struct {A_var var; A_exp exp;} assign;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon11
assignExp	tiger.y	/^assignExp : var ASSIGN exp            {$$ = A_AssignExp(EM_tokPos, $1, $3);}$/;"	l
bin_oper	printtree.c	/^static char bin_oper[][12] = {$/;"	v	file:
binder	table.c	/^typedef struct binder_ *binder;$/;"	t	typeref:struct:binder_	file:
binder_	table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	s	file:
block_env	canon.c	/^static S_table block_env;$/;"	v	file:
body	absyn.h	/^		 S_symbol result; A_exp body;};$/;"	m	struct:A_fundec_
body	absyn.h	/^	      struct {A_decList decs; A_exp body;} let;$/;"	m	struct:A_exp_::__anon7::__anon15
body	absyn.h	/^	      struct {A_exp test, body;} whilee;$/;"	m	struct:A_exp_::__anon7::__anon13
body	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon7::__anon14
body	assem.h	/^  AS_instrList body;$/;"	m	struct:AS_proc_
body	frame.h	/^				struct {T_stm body; F_frame frame;} proc;$/;"	m	struct:F_frag_::__anon33::__anon35
bool	util.h	/^typedef char bool;$/;"	t
breakExp	tiger.y	/^breakExp:   BREAK                       {$$ = A_BreakExp(EM_tokPos);}$/;"	l
buf	lex.yy.c	/^char buf[MAXLEN];$/;"	v
<<<<<<< HEAD
buildGraph	liveness.c	/^static void buildGraph(G_graph flow) {$/;"	f	file:
calculateLiveness	liveness.c	/^static void calculateLiveness(G_graph flow) {$/;"	f	file:
call	absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon8
call	hello.tig.s	/^call print$/;"	l
callExp	tiger.y	/^callExp :   ID LPAREN argList RPAREN {$$ = A_CallExp(EM_tokPos, S_Symbol($1), $3);}$/;"	l
calleesaves	x86frame.c	/^static Temp_tempList calleesaves() {$/;"	f	file:
callersaves	x86frame.c	/^static Temp_tempList callersaves() {$/;"	f	file:
cat	graph.c	/^static G_nodeList cat(G_nodeList a, G_nodeList b) {$/;"	f	file:
charPos	lex.yy.c	/^int charPos = 1;$/;"	v
chars	runtime.c	/^struct string {int length; unsigned char chars[1];};$/;"	m	struct:string	file:
checkFor	semant.c	/^static A_exp checkFor;$/;"	v	file:
checked_malloc	util.c	/^void *checked_malloc(int len)$/;"	f
chr	runtime.c	/^struct string *chr(int i)$/;"	f
cmp2asm	codegen.c	/^static inline string cmp2asm(T_relOp op) {$/;"	f	file:
coloring	color.h	/^struct COL_result {Temp_map coloring; Temp_tempList spills;};$/;"	m	struct:COL_result
coloring	regalloc.h	/^struct RA_result {Temp_map coloring; AS_instrList il;};$/;"	m	struct:RA_result
commute	canon.c	/^static bool commute(T_stm x, T_exp y)$/;"	f	file:
concat	runtime.c	/^struct string *concat(struct string *a, struct string *b)$/;"	f
consts	runtime.c	/^struct string consts[256];$/;"	v	typeref:struct:string
=======
call	absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon8
callExp	tiger.y	/^callExp :   ID LPAREN argList RPAREN {$$ = A_CallExp(EM_tokPos, S_Symbol($1), $3);}$/;"	l
charPos	lex.yy.c	/^int charPos = 1;$/;"	v
checkFor	semant.c	/^static A_exp checkFor;$/;"	v	file:
checked_malloc	util.c	/^void *checked_malloc(int len)$/;"	f
commute	canon.c	/^static bool commute(T_stm x, T_exp y)$/;"	f	file:
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
cx	translate.c	/^        struct Cx cx;$/;"	m	union:Tr_exp_::__anon37	typeref:struct:Tr_exp_::__anon37::Cx	file:
dec	tiger.y	/^dec     :   fucntionDec {$$ = $1;}$/;"	l
dec	y.tab.c	/^    A_dec dec;$/;"	m	union:YYSTYPE	file:
dec	y.tab.h	/^    A_dec dec;$/;"	m	union:YYSTYPE
decList	tiger.y	/^decList :   dec %prec   LOWER   {$$ = A_DecList($1, NULL);}$/;"	l
decList	y.tab.c	/^    A_decList decList;$/;"	m	union:YYSTYPE	file:
decList	y.tab.h	/^    A_decList decList;$/;"	m	union:YYSTYPE
decs	absyn.h	/^	      struct {A_decList decs; A_exp body;} let;$/;"	m	struct:A_exp_::__anon7::__anon15
<<<<<<< HEAD
delete	graph.c	/^static G_nodeList delete(G_node a, G_nodeList l) {$/;"	f	file:
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
doPatch	translate.c	/^static void doPatch(patchList tList, Temp_label label) {$/;"	f	file:
doProc	main.c	/^static void doProc(FILE *out, F_frame frame, T_stm body)$/;"	f	file:
do_exp	canon.c	/^static struct stmExp do_exp(T_exp exp)$/;"	f	file:
do_stm	canon.c	/^static T_stm do_stm(T_stm stm)$/;"	f	file:
dst	assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon24::__anon27
dst	assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon24::__anon25
<<<<<<< HEAD
dst	liveness.h	/^	G_node src, dst;$/;"	m	struct:Live_moveList_
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
dst	tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	struct:T_stm_::__anon41::__anon45
e	canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	m	struct:stmExp	file:
efield	tiger.y	/^efield      :   ID      EQ exp      {$$ = A_Efield(S_Symbol($1), $3);}$/;"	l
efield	y.tab.c	/^    A_efield efield;$/;"	m	union:YYSTYPE	file:
efield	y.tab.h	/^    A_efield efield;$/;"	m	union:YYSTYPE
efieldList	tiger.y	/^efieldList  :   efield _efieldList  {$$ = A_EfieldList($1, $2);}$/;"	l
efieldList	y.tab.c	/^    A_efieldList efieldList;$/;"	m	union:YYSTYPE	file:
efieldList	y.tab.h	/^    A_efieldList efieldList;$/;"	m	union:YYSTYPE
elsee	absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	struct:A_exp_::__anon7::__anon12
<<<<<<< HEAD
emit	codegen.c	/^static void emit(AS_instr inst) {$/;"	f	file:
empty	runtime.c	/^struct string empty={0,""};$/;"	v	typeref:struct:string
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
epilog	assem.h	/^  string epilog;$/;"	m	struct:AS_proc_
escape	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon7::__anon14
escape	absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon18::__anon19
escape	absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
ex	translate.c	/^        T_exp ex;$/;"	m	union:Tr_exp_::__anon37	file:
exp	absyn.h	/^		       A_exp exp;} subscript;$/;"	m	struct:A_var_::__anon3::__anon5
exp	absyn.h	/^	      struct {A_var var; A_exp exp;} assign;$/;"	m	struct:A_exp_::__anon7::__anon11
exp	absyn.h	/^struct A_efield_ {S_symbol name; A_exp exp;};$/;"	m	struct:A_efield_
exp	semant.h	/^    Tr_exp exp;$/;"	m	struct:expty
exp	tiger.y	/^exp :   varExp      {$$ = $1;}$/;"	l
exp	tree.h	/^		      struct {T_exp exp; Temp_labelList jumps;} JUMP;$/;"	m	struct:T_stm_::__anon41::__anon43
exp	tree.h	/^		     struct {T_stm stm; T_exp exp;} ESEQ;$/;"	m	struct:T_exp_::__anon47::__anon49
exp	y.tab.c	/^	A_exp exp;$/;"	m	union:YYSTYPE	file:
exp	y.tab.h	/^	A_exp exp;$/;"	m	union:YYSTYPE
expList	y.tab.c	/^    A_expList expList;$/;"	m	union:YYSTYPE	file:
expList	y.tab.h	/^    A_expList expList;$/;"	m	union:YYSTYPE
expRefList	canon.c	/^typedef struct expRefList_ *expRefList;$/;"	t	typeref:struct:expRefList_	file:
expRefList_	canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	s	file:
expTy	semant.c	/^struct expty expTy(Tr_exp exp, Ty_ty ty) {$/;"	f
expty	semant.h	/^struct expty {$/;"	s
false	tree.h	/^			      Temp_label true, false;} CJUMP;$/;"	m	struct:T_stm_::__anon41::__anon44
falses	translate.c	/^    patchList falses;$/;"	m	struct:Cx	file:
field	absyn.h	/^		       S_symbol sym;} field;$/;"	m	union:A_var_::__anon3	typeref:struct:A_var_::__anon3::__anon4
field	tiger.y	/^field   :   ID COLON ID         {$$ = A_Field(EM_tokPos, S_Symbol($1), S_Symbol($3));}$/;"	l
field	y.tab.c	/^    A_field	field;$/;"	m	union:YYSTYPE	file:
field	y.tab.h	/^    A_field	field;$/;"	m	union:YYSTYPE
fieldList	tiger.y	/^fieldList   :   field _fieldList %prec LOWER {$$ = A_FieldList($1, $2);}$/;"	l
fieldList	y.tab.c	/^    A_fieldList fieldList;$/;"	m	union:YYSTYPE	file:
fieldList	y.tab.h	/^    A_fieldList fieldList;$/;"	m	union:YYSTYPE
fields	absyn.h	/^	      struct {S_symbol typ; A_efieldList fields;} record;$/;"	m	struct:A_exp_::__anon7::__anon10
fileName	errormsg.c	/^static string fileName = "";$/;"	v	file:
flex_int16_t	lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
<<<<<<< HEAD
flush	runtime.c	/^void flush()$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
forExp	tiger.y	/^forExp  :   FOR ID ASSIGN exp TO exp DO exp {$$ = A_ForExp(EM_tokPos, S_Symbol($2), $4, $6, $8);}$/;"	l
formals	env.h	/^            Ty_tyList formals;$/;"	m	struct:E_enventry_::__anon29::__anon31
formals	x86frame.c	/^    F_accessList formals;$/;"	m	struct:F_frame_	file:
format	assem.c	/^static void format(char *result, string assem, $/;"	f	file:
forr	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon14
fragList	translate.c	/^static F_fragList fragList = NULL;$/;"	v	file:
frame	frame.h	/^				struct {T_stm body; F_frame frame;} proc;$/;"	m	struct:F_frag_::__anon33::__anon35
frame	translate.h	/^    F_frame frame;$/;"	m	struct:Tr_level_
<<<<<<< HEAD
framePtr	x86frame.c	/^static Temp_temp framePtr = NULL;$/;"	v	file:
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
frameSize	x86frame.c	/^    int frameSize;$/;"	m	struct:F_frame_	file:
fucntionDec	tiger.y	/^fucntionDec :   funcdecList {$$ = A_FunctionDec(EM_tokPos, $1);}$/;"	l
fun	env.h	/^        } fun;$/;"	m	union:E_enventry_::__anon29	typeref:struct:E_enventry_::__anon29::__anon31
fun	tree.h	/^		     struct {T_exp fun; T_expList args;} CALL;$/;"	m	struct:T_exp_::__anon47::__anon50
func	absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	struct:A_exp_::__anon7::__anon8
funcdec	tiger.y	/^funcdec :   FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp {$$ = A_Fundec(EM_tokPos, S_Symbol($2), $4, S_Symbol($7), $9);}$/;"	l
funcdec	y.tab.c	/^    A_fundec funcdec;$/;"	m	union:YYSTYPE	file:
funcdec	y.tab.h	/^    A_fundec funcdec;$/;"	m	union:YYSTYPE
funcdecList	tiger.y	/^funcdecList :   funcdec funcdecList {$$ = A_FundecList($1, $2);}$/;"	l
funcdecList	y.tab.c	/^    A_fundecList funcdecList;$/;"	m	union:YYSTYPE	file:
funcdecList	y.tab.h	/^    A_fundecList funcdecList;$/;"	m	union:YYSTYPE
function	absyn.h	/^     union {A_fundecList function;$/;"	m	union:A_dec_::__anon18
getLast	canon.c	/^static T_stmList getLast(T_stmList list)$/;"	f	file:
getNext	canon.c	/^static T_stmList getNext()$/;"	f	file:
get_call_rlist	canon.c	/^static expRefList get_call_rlist(T_exp exp)$/;"	f	file:
<<<<<<< HEAD
getchar	runtime.c	110;"	d	file:
global_block	canon.c	/^static struct C_block global_block;$/;"	v	typeref:struct:C_block	file:
graph	liveness.h	/^	G_graph graph;$/;"	m	struct:Live_graph
=======
global_block	canon.c	/^static struct C_block global_block;$/;"	v	typeref:struct:C_block	file:
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
hash	symbol.c	/^static unsigned int hash(char *s0)$/;"	f	file:
hashtable	symbol.c	/^static S_symbol hashtable[SIZE];$/;"	v	file:
head	absyn.h	/^struct A_decList_ {A_dec head; A_decList tail;};$/;"	m	struct:A_decList_
head	absyn.h	/^struct A_efieldList_ {A_efield head; A_efieldList tail;};$/;"	m	struct:A_efieldList_
head	absyn.h	/^struct A_expList_ {A_exp head; A_expList tail;};$/;"	m	struct:A_expList_
head	absyn.h	/^struct A_fieldList_ {A_field head; A_fieldList tail;};$/;"	m	struct:A_fieldList_
head	absyn.h	/^struct A_fundecList_ {A_fundec head; A_fundecList tail;};$/;"	m	struct:A_fundecList_
head	absyn.h	/^struct A_nametyList_ {A_namety head; A_nametyList tail;};$/;"	m	struct:A_nametyList_
head	assem.h	/^struct AS_instrList_ { AS_instr head; AS_instrList tail;};$/;"	m	struct:AS_instrList_
head	canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	m	struct:expRefList_	file:
head	canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	m	struct:C_stmListList_
head	frame.h	/^    F_access head;$/;"	m	struct:F_accessList_
head	frame.h	/^struct F_fragList_ {F_frag head; F_fragList tail;};$/;"	m	struct:F_fragList_
<<<<<<< HEAD
head	graph.h	/^struct G_nodeList_ { G_node head; G_nodeList tail;};$/;"	m	struct:G_nodeList_
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
head	temp.h	/^struct Temp_labelList_ { Temp_label head; Temp_labelList tail;};$/;"	m	struct:Temp_labelList_
head	temp.h	/^struct Temp_tempList_ { Temp_temp head; Temp_tempList tail;};$/;"	m	struct:Temp_tempList_
head	translate.c	/^    Temp_label *head;$/;"	m	struct:patchList_	file:
head	translate.c	/^    Tr_exp head;$/;"	m	struct:Tr_expList_	file:
head	translate.h	/^	Tr_access head;$/;"	m	struct:Tr_accessList_
head	tree.h	/^struct T_expList_ {T_exp head; T_expList tail;};$/;"	m	struct:T_expList_
head	tree.h	/^struct T_stmList_ {T_stm head; T_stmList tail;};$/;"	m	struct:T_stmList_
head	types.h	/^struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};$/;"	m	struct:Ty_fieldList_
head	types.h	/^struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};$/;"	m	struct:Ty_tyList_
head	util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
hi	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon7::__anon14
i	errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	m	struct:intList	file:
<<<<<<< HEAD
iList	codegen.c	/^static AS_instrList iList = NULL, last = NULL;$/;"	v	file:
ifExp	tiger.y	/^ifExp   :   IF  exp THEN exp ELSE exp {$$ = A_IfExp(EM_tokPos, $2, $4, $6);}$/;"	l
iff	absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon12
il	regalloc.h	/^struct RA_result {Temp_map coloring; AS_instrList il;};$/;"	m	struct:RA_result
inDegree	graph.c	/^int inDegree(G_node n)$/;"	f
=======
ifExp	tiger.y	/^ifExp   :   IF  exp THEN exp ELSE exp {$$ = A_IfExp(EM_tokPos, $2, $4, $6);}$/;"	l
iff	absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon12
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
inFrame	x86frame.c	/^        inFrame, inReg$/;"	e	enum:F_access_::__anon54	file:
inReg	x86frame.c	/^        inFrame, inReg$/;"	e	enum:F_access_::__anon54	file:
indent	prabsyn.c	/^static void indent(FILE *out, int d) {$/;"	f	file:
indent	printtree.c	/^static void indent(FILE *out, int d) {$/;"	f	file:
<<<<<<< HEAD
info	graph.c	/^  void *info;$/;"	m	struct:G_node_	file:
init	absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon7::__anon16
init	absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon18::__anon19
initArray	runtime.c	/^int *initArray(int size, int init)$/;"	f
=======
init	absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon7::__anon16
init	absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon18::__anon19
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
intExp	tiger.y	/^intExp  :   INT     {$$ = A_IntExp(EM_tokPos, $1);}$/;"	l
intList	errormsg.c	/^static IntList intList(int i, IntList rest) $/;"	f	file:
intList	errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	s	file:
intt	absyn.h	/^	      int intt;$/;"	m	union:A_exp_::__anon7
isNop	canon.c	/^static bool isNop(T_stm x) $/;"	f	file:
ival	y.tab.c	/^	int ival;$/;"	m	union:YYSTYPE	file:
ival	y.tab.h	/^	int ival;$/;"	m	union:YYSTYPE
<<<<<<< HEAD
jmp	hello.tig.s	/^jmp L1$/;"	l
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
joinPatch	translate.c	/^static patchList joinPatch(patchList first, patchList second) {$/;"	f	file:
jumps	assem.h	/^			      AS_targets jumps;} OPER;$/;"	m	struct:AS_instr_::__anon24::__anon25
jumps	tree.h	/^		      struct {T_exp exp; Temp_labelList jumps;} JUMP;$/;"	m	struct:T_stm_::__anon41::__anon43
key	table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
kind	absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	m	struct:A_exp_	typeref:enum:A_exp_::__anon6
kind	absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	m	struct:A_var_	typeref:enum:A_var_::__anon2
kind	absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	m	struct:A_dec_	typeref:enum:A_dec_::__anon17
kind	absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	m	struct:A_ty_	typeref:enum:A_ty_::__anon20
kind	assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	m	struct:AS_instr_	typeref:enum:AS_instr_::__anon23
kind	env.h	/^    } kind;$/;"	m	struct:E_enventry_	typeref:enum:E_enventry_::__anon28
kind	frame.h	/^struct F_frag_ {enum {F_stringFrag, F_procFrag} kind;$/;"	m	struct:F_frag_	typeref:enum:F_frag_::__anon32
kind	translate.c	/^    } kind;$/;"	m	struct:Tr_exp_	typeref:enum:Tr_exp_::__anon36	file:
kind	tree.h	/^		       T_EXP} kind;$/;"	m	struct:T_stm_	typeref:enum:T_stm_::__anon40
kind	tree.h	/^		      T_CONST, T_CALL} kind;$/;"	m	struct:T_exp_	typeref:enum:T_exp_::__anon46
kind	types.h	/^		       Ty_name, Ty_void} kind;$/;"	m	struct:Ty_ty_	typeref:enum:Ty_ty_::__anon51
kind	x86frame.c	/^    } kind;$/;"	m	struct:F_access_	typeref:enum:F_access_::__anon54	file:
label	assem.h	/^		      struct {string assem; Temp_label label;} LABEL;$/;"	m	struct:AS_instr_::__anon24::__anon26
label	canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	m	struct:C_block
label	env.h	/^            Temp_label label;$/;"	m	struct:E_enventry_::__anon29::__anon31
label	frame.h	/^				struct {Temp_label label; string str;} stringg;$/;"	m	struct:F_frag_::__anon33::__anon34
labels	assem.h	/^typedef struct {Temp_labelList labels;} *AS_targets;$/;"	m	struct:__anon22
labels	temp.c	/^static int labels = 0;$/;"	v	file:
<<<<<<< HEAD
last	codegen.c	/^static AS_instrList iList = NULL, last = NULL;$/;"	v	file:
leave	hello.tig.s	/^leave$/;"	l
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
left	absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon7::__anon9
left	tree.h	/^		      struct {T_relOp op; T_exp left, right;$/;"	m	struct:T_stm_::__anon41::__anon44
left	tree.h	/^	       union {struct {T_stm left, right;} SEQ;$/;"	m	struct:T_stm_::__anon41::__anon42
left	tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	struct:T_exp_::__anon47::__anon48
<<<<<<< HEAD
length	runtime.c	/^struct string {int length; unsigned char chars[1];};$/;"	m	struct:string	file:
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
let	absyn.h	/^	      struct {A_decList decs; A_exp body;} let;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon15
letExp	tiger.y	/^letExp  :   LET decList IN seqList END  {$$ = A_LetExp(EM_tokPos, $2, A_SeqExp(EM_tokPos, $4));}$/;"	l
level	env.h	/^            Tr_level level;$/;"	m	struct:E_enventry_::__anon29::__anon31
level	translate.c	/^   Tr_level level;$/;"	m	struct:Tr_access_	file:
lineNum	errormsg.c	/^static int lineNum = 1;$/;"	v	file:
linePos	errormsg.c	/^static IntList linePos=NULL;$/;"	v	file:
linear	canon.c	/^static T_stmList linear(T_stm stm, T_stmList right)$/;"	f	file:
<<<<<<< HEAD
liveMap	liveness.c	/^G_table liveMap;$/;"	v
lo	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon7::__anon14
locals	x86frame.c	/^    F_accessList locals;$/;"	m	struct:F_frame_	file:
main	main.c	/^int main(int argc, string *argv)$/;"	f
main	runtime.c	/^int main()$/;"	f
=======
lo	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon7::__anon14
locals	x86frame.c	/^    F_accessList locals;$/;"	m	struct:F_frame_	file:
main	main.c	/^int main(int argc, string *argv)$/;"	f
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
makeFormalTyList	semant.c	/^Ty_tyList makeFormalTyList(S_table tenv, A_fieldList f){$/;"	f
marksym	symbol.c	/^static struct S_symbol_ marksym = {"<mark>",0};$/;"	v	typeref:struct:S_symbol_	file:
mkBlocks	canon.c	/^static C_stmListList mkBlocks(T_stmList stms, Temp_label done)$/;"	f	file:
mksymbol	symbol.c	/^static S_symbol mksymbol(string name, S_symbol next)$/;"	f	file:
<<<<<<< HEAD
moves	liveness.h	/^	Live_moveList moves;$/;"	m	struct:Live_graph
movl	hello.tig.s	/^movl $.L0, %ecx$/;"	l
movl	hello.tig.s	/^movl $4, %edx$/;"	l
movl	hello.tig.s	/^movl %eax, %ecx$/;"	l
movl	hello.tig.s	/^movl %eax, %esp$/;"	l
movl	hello.tig.s	/^movl %ecx, %eax$/;"	l
movl	hello.tig.s	/^movl %esp, %eax$/;"	l
movl	hello.tig.s	/^movl %esp, %ebp$/;"	l
munchArgs	codegen.c	/^static Temp_tempList munchArgs(int i, T_expList args) {$/;"	f	file:
munchExp	codegen.c	/^static Temp_temp munchExp(T_exp e) {$/;"	f	file:
munchStm	codegen.c	/^static void munchStm(T_stm s) {$/;"	f	file:
mygraph	graph.c	/^  G_graph mygraph;$/;"	m	struct:G_node_	file:
mykey	graph.c	/^  int mykey;$/;"	m	struct:G_node_	file:
mylast	graph.c	/^		 G_nodeList mynodes, mylast;$/;"	m	struct:G_graph_	file:
mynodes	graph.c	/^		 G_nodeList mynodes, mylast;$/;"	m	struct:G_graph_	file:
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
name	absyn.h	/^	      union {S_symbol name;$/;"	m	union:A_ty_::__anon21
name	absyn.h	/^                 S_symbol name; A_fieldList params; $/;"	m	struct:A_fundec_
name	absyn.h	/^struct A_efield_ {S_symbol name; A_exp exp;};$/;"	m	struct:A_efield_
name	absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
name	absyn.h	/^struct A_namety_ {S_symbol name; A_ty ty;};$/;"	m	struct:A_namety_
name	symbol.c	/^struct S_symbol_ {string name; S_symbol next;};$/;"	m	struct:S_symbol_	file:
name	translate.h	/^    Temp_label name;$/;"	m	struct:Tr_level_
name	types.h	/^		      struct {S_symbol sym; Ty_ty ty;} name;$/;"	m	union:Ty_ty_::__anon52	typeref:struct:Ty_ty_::__anon52::__anon53
name	types.h	/^struct Ty_field_ {S_symbol name; Ty_ty ty;};$/;"	m	struct:Ty_field_
name	x86frame.c	/^    Temp_label name;$/;"	m	struct:F_frame_	file:
nameTy	tiger.y	/^nameTy  :   ID                      {$$ = A_NameTy(EM_tokPos, S_Symbol($1));}$/;"	l
namety	tiger.y	/^namety      :   TYPE    ID EQ ty    {$$ = A_Namety(S_Symbol($2), $4);}$/;"	l
namety	y.tab.c	/^    A_namety namety;$/;"	m	union:YYSTYPE	file:
namety	y.tab.h	/^    A_namety namety;$/;"	m	union:YYSTYPE
nametyList	tiger.y	/^nametyList  :   namety  nametyList  {$$ = A_NametyList($1, $2);}$/;"	l
nametyList	y.tab.c	/^    A_nametyList nametyList;$/;"	m	union:YYSTYPE	file:
nametyList	y.tab.h	/^    A_nametyList nametyList;$/;"	m	union:YYSTYPE
nest_cmt_cnt	lex.yy.c	/^int nest_cmt_cnt = 0;$/;"	v
newMap	temp.c	/^Temp_map newMap(TAB_table tab, Temp_map under) {$/;"	f
next	canon.c	/^static C_stmListList next(T_stmList prevstms, T_stmList stms, Temp_label done)$/;"	f	file:
next	symbol.c	/^struct S_symbol_ {string name; S_symbol next;};$/;"	m	struct:S_symbol_	file:
next	table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
nilExp	tiger.y	/^nilExp  :   NIL     {$$ = A_NilExp(EM_tokPos);}$/;"	l
<<<<<<< HEAD
nodecount	graph.c	/^struct G_graph_ {int nodecount;$/;"	m	struct:G_graph_	file:
not	runtime.c	/^int not(int i)$/;"	f
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
nthLabel	assem.c	/^static Temp_label nthLabel(Temp_labelList list, int i) {$/;"	f	file:
nthTemp	assem.c	/^static Temp_temp nthTemp(Temp_tempList list, int i) {$/;"	f	file:
num	temp.c	/^struct Temp_temp_ {int num;};$/;"	m	struct:Temp_temp_	file:
nx	translate.c	/^        T_stm nx;$/;"	m	union:Tr_exp_::__anon37	file:
offset	x86frame.c	/^        int offset; \/* InFrame *\/$/;"	m	union:F_access_::__anon55	file:
op	absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon9
op	tree.h	/^		      struct {T_relOp op; T_exp left, right;$/;"	m	struct:T_stm_::__anon41::__anon44
op	tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	struct:T_exp_::__anon47::__anon48
<<<<<<< HEAD
op2asm	codegen.c	/^static inline string op2asm(T_binOp op) {$/;"	f	file:
opExp	tiger.y	/^opExp   :   exp   PLUS    exp     {$$ = A_OpExp(EM_tokPos, A_plusOp, $1, $3);}$/;"	l
oper	absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon7::__anon9
ord	runtime.c	/^int ord(struct string *s)$/;"	f
outDegree	graph.c	/^int outDegree(G_node n)$/;"	f
=======
opExp	tiger.y	/^opExp   :   exp   PLUS    exp     {$$ = A_OpExp(EM_tokPos, A_plusOp, $1, $3);}$/;"	l
oper	absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon7::__anon9
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
outfile	temp.c	/^static FILE *outfile;$/;"	v	file:
params	absyn.h	/^                 S_symbol name; A_fieldList params; $/;"	m	struct:A_fundec_
parent	translate.h	/^    Tr_level parent;$/;"	m	struct:Tr_level_
parse	parse.c	/^A_exp parse(string fname) $/;"	f
patchList	translate.c	/^typedef struct patchList_ *patchList;$/;"	t	typeref:struct:patchList_	file:
patchList_	translate.c	/^struct patchList_ {$/;"	s	file:
pos	absyn.h	/^	      A_pos pos;$/;"	m	struct:A_ty_
pos	absyn.h	/^        A_pos pos;$/;"	m	struct:A_var_
pos	absyn.h	/^       A_pos pos;$/;"	m	struct:A_exp_
pos	absyn.h	/^     A_pos pos;$/;"	m	struct:A_dec_
pos	absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
pos	absyn.h	/^struct A_fundec_ {A_pos pos;$/;"	m	struct:A_fundec_
pos	y.tab.c	/^	int pos;$/;"	m	union:YYSTYPE	file:
pos	y.tab.h	/^	int pos;$/;"	m	union:YYSTYPE
pr_dec	prabsyn.c	/^static void pr_dec(FILE *out, A_dec v, int d) {$/;"	f	file:
pr_decList	prabsyn.c	/^static void pr_decList(FILE *out, A_decList v, int d) {$/;"	f	file:
pr_efield	prabsyn.c	/^static void pr_efield(FILE *out, A_efield v, int d) {$/;"	f	file:
pr_efieldList	prabsyn.c	/^static void pr_efieldList(FILE *out, A_efieldList v, int d) {$/;"	f	file:
pr_exp	prabsyn.c	/^void pr_exp(FILE *out, A_exp v, int d) {$/;"	f
pr_expList	prabsyn.c	/^static void pr_expList(FILE *out, A_expList v, int d) {$/;"	f	file:
pr_field	prabsyn.c	/^static void pr_field(FILE *out, A_field v, int d) {$/;"	f	file:
pr_fieldList	prabsyn.c	/^static void pr_fieldList(FILE *out, A_fieldList v, int d) {$/;"	f	file:
pr_fundec	prabsyn.c	/^static void pr_fundec(FILE *out, A_fundec v, int d) {$/;"	f	file:
pr_fundecList	prabsyn.c	/^static void pr_fundecList(FILE *out, A_fundecList v, int d) {$/;"	f	file:
pr_namety	prabsyn.c	/^static void pr_namety(FILE *out, A_namety v, int d) {$/;"	f	file:
pr_nametyList	prabsyn.c	/^static void pr_nametyList(FILE *out, A_nametyList v, int d) {$/;"	f	file:
pr_oper	prabsyn.c	/^static void pr_oper(FILE *out, A_oper d) {$/;"	f	file:
pr_stm	printtree.c	/^static void pr_stm(FILE *out, T_stm stm, int d)$/;"	f	file:
pr_tree_exp	printtree.c	/^static void pr_tree_exp(FILE *out, T_exp exp, int d)$/;"	f	file:
pr_ty	prabsyn.c	/^static void pr_ty(FILE *out, A_ty v, int d) {$/;"	f	file:
pr_var	prabsyn.c	/^static void pr_var(FILE *out, A_var v, int d) {$/;"	f	file:
<<<<<<< HEAD
preds	graph.c	/^  G_nodeList preds;$/;"	m	struct:G_node_	file:
prevtop	table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
print	runtime.c	/^void print(struct string *s)$/;"	f
printStmList	printtree.c	/^void printStmList (FILE *out, T_stmList stmList) $/;"	f
printi	runtime.c	/^void printi(int k)$/;"	f
proc	frame.h	/^				struct {T_stm body; F_frame frame;} proc;$/;"	m	union:F_frag_::__anon33	typeref:struct:F_frag_::__anon33::__anon35
program	tiger.y	/^program :   exp     {absyn_root = $1;}$/;"	l
prolog	assem.h	/^  string prolog;$/;"	m	struct:AS_proc_
push	hello.tig.s	/^push %ebp$/;"	l
push	hello.tig.s	/^push %ecx$/;"	l
=======
prevtop	table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
printStmList	printtree.c	/^void printStmList (FILE *out, T_stmList stmList) $/;"	f
proc	frame.h	/^				struct {T_stm body; F_frame frame;} proc;$/;"	m	union:F_frag_::__anon33	typeref:struct:F_frag_::__anon33::__anon35
program	tiger.y	/^program :   exp     {absyn_root = $1;}$/;"	l
prolog	assem.h	/^  string prolog;$/;"	m	struct:AS_proc_
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
record	absyn.h	/^		     A_fieldList record;$/;"	m	union:A_ty_::__anon21
record	absyn.h	/^	      struct {S_symbol typ; A_efieldList fields;} record;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon10
record	types.h	/^	       union {Ty_fieldList record;$/;"	m	union:Ty_ty_::__anon52
recordExp	tiger.y	/^recordExp : ID LBRACE efieldList RBRACE {$$ = A_RecordExp(EM_tokPos, S_Symbol($1), $3);}$/;"	l
recordTy	tiger.y	/^recordTy:   LBRACE fieldList RBRACE {$$ = A_RecordTy(EM_tokPos, $2);}$/;"	l
reg	x86frame.c	/^        Temp_temp reg; \/* InReg *\/$/;"	m	union:F_access_::__anon55	file:
rel_oper	printtree.c	/^static char rel_oper[][12] = {$/;"	v	file:
reorder	canon.c	/^static T_stm reorder(expRefList rlist) {$/;"	f	file:
rest	errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	m	struct:intList	typeref:struct:intList::intList	file:
result	absyn.h	/^		 S_symbol result; A_exp body;};$/;"	m	struct:A_fundec_
result	env.h	/^            Ty_ty result;$/;"	m	struct:E_enventry_::__anon29::__anon31
<<<<<<< HEAD
ret	hello.tig.s	/^ret$/;"	l
returnSink	x86frame.c	/^static Temp_tempList returnSink = NULL;$/;"	v	file:
returnVal	x86frame.c	/^static Temp_temp returnVal = NULL;$/;"	v	file:
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
right	absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon7::__anon9
right	tree.h	/^		      struct {T_relOp op; T_exp left, right;$/;"	m	struct:T_stm_::__anon41::__anon44
right	tree.h	/^	       union {struct {T_stm left, right;} SEQ;$/;"	m	struct:T_stm_::__anon41::__anon42
right	tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	struct:T_exp_::__anon47::__anon48
s	canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	m	struct:stmExp	file:
seq	absyn.h	/^	      A_expList seq;$/;"	m	union:A_exp_::__anon7
seq	canon.c	/^static T_stm seq(T_stm x, T_stm y)$/;"	f	file:
seqExp	tiger.y	/^seqExp  :   LPAREN seqList RPAREN     {$$ = A_SeqExp(EM_tokPos, $2);}$/;"	l
seqList	tiger.y	/^seqList :  exp SEMICOLON seqList{$$ = A_ExpList($1, $3);}$/;"	l
short	y.tab.c	258;"	d	file:
showit	temp.c	/^void showit(Temp_temp t, string r) {$/;"	f
simple	absyn.h	/^	union {S_symbol simple;$/;"	m	union:A_var_::__anon3
size	absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon7::__anon16
<<<<<<< HEAD
size	runtime.c	/^int size(struct string *s)$/;"	f
specRegs	x86frame.c	/^static Temp_tempList specRegs = NULL;$/;"	v	file:
specialregs	x86frame.c	/^static Temp_tempList specialregs() {$/;"	f	file:
spills	color.h	/^struct COL_result {Temp_map coloring; Temp_tempList spills;};$/;"	m	struct:COL_result
src	assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon24::__anon27
src	assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon24::__anon25
src	liveness.h	/^	G_node src, dst;$/;"	m	struct:Live_moveList_
src	tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	struct:T_stm_::__anon41::__anon45
stackPtr	x86frame.c	/^static Temp_temp stackPtr = NULL;$/;"	v	file:
=======
src	assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon24::__anon27
src	assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon24::__anon25
src	tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	struct:T_stm_::__anon41::__anon45
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
stm	translate.c	/^    T_stm stm;$/;"	m	struct:Cx	file:
stm	tree.h	/^		     struct {T_stm stm; T_exp exp;} ESEQ;$/;"	m	struct:T_exp_::__anon47::__anon49
stmExp	canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	s	file:
stmLists	canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	m	struct:C_block
str	frame.h	/^				struct {Temp_label label; string str;} stringg;$/;"	m	struct:F_frag_::__anon33::__anon34
str_oper	prabsyn.c	/^static char str_oper[][12] = {$/;"	v	file:
str_pos	lex.yy.c	/^int str_pos = 0;$/;"	v
str_ty	types.c	/^static char str_ty[][12] = {$/;"	v	file:
streq	symbol.c	/^static int streq(string a, string b)$/;"	f	file:
<<<<<<< HEAD
string	runtime.c	/^struct string {int length; unsigned char chars[1];};$/;"	s	file:
string	util.h	/^typedef char *string;$/;"	t
stringEqual	runtime.c	/^int stringEqual(struct string *s, struct string *t)$/;"	f
=======
string	util.h	/^typedef char *string;$/;"	t
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
stringExp	tiger.y	/^stringExp : STRING  {$$ = A_StringExp(EM_tokPos, $1);}$/;"	l
stringFragList	translate.c	/^static F_fragList stringFragList = NULL;$/;"	v	file:
stringg	absyn.h	/^	      string stringg;$/;"	m	union:A_exp_::__anon7
stringg	frame.h	/^				struct {Temp_label label; string str;} stringg;$/;"	m	union:F_frag_::__anon33	typeref:struct:F_frag_::__anon33::__anon34
subscript	absyn.h	/^		       A_exp exp;} subscript;$/;"	m	union:A_var_::__anon3	typeref:struct:A_var_::__anon3::__anon5
<<<<<<< HEAD
substring	runtime.c	/^struct string *substring(struct string *s, int first, int n)$/;"	f
succs	graph.c	/^  G_nodeList succs;$/;"	m	struct:G_node_	file:
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
sval	y.tab.c	/^	string sval;$/;"	m	union:YYSTYPE	file:
sval	y.tab.h	/^	string sval;$/;"	m	union:YYSTYPE
sym	absyn.h	/^		       S_symbol sym;} field;$/;"	m	struct:A_var_::__anon3::__anon4
sym	types.h	/^		      struct {S_symbol sym; Ty_ty ty;} name;$/;"	m	struct:Ty_ty_::__anon52::__anon53
<<<<<<< HEAD
tNode	liveness.c	/^TAB_table tNode;$/;"	v
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
tab	temp.c	/^struct Temp_map_ {TAB_table tab; Temp_map under;};$/;"	m	struct:Temp_map_	file:
table	table.c	/^  binder table[TABSIZE];$/;"	m	struct:TAB_table_	file:
tail	absyn.h	/^struct A_decList_ {A_dec head; A_decList tail;};$/;"	m	struct:A_decList_
tail	absyn.h	/^struct A_efieldList_ {A_efield head; A_efieldList tail;};$/;"	m	struct:A_efieldList_
tail	absyn.h	/^struct A_expList_ {A_exp head; A_expList tail;};$/;"	m	struct:A_expList_
tail	absyn.h	/^struct A_fieldList_ {A_field head; A_fieldList tail;};$/;"	m	struct:A_fieldList_
tail	absyn.h	/^struct A_fundecList_ {A_fundec head; A_fundecList tail;};$/;"	m	struct:A_fundecList_
tail	absyn.h	/^struct A_nametyList_ {A_namety head; A_nametyList tail;};$/;"	m	struct:A_nametyList_
tail	assem.h	/^struct AS_instrList_ { AS_instr head; AS_instrList tail;};$/;"	m	struct:AS_instrList_
tail	canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	m	struct:expRefList_	file:
tail	canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	m	struct:C_stmListList_
tail	frame.h	/^    F_accessList tail;$/;"	m	struct:F_accessList_
tail	frame.h	/^struct F_fragList_ {F_frag head; F_fragList tail;};$/;"	m	struct:F_fragList_
<<<<<<< HEAD
tail	graph.h	/^struct G_nodeList_ { G_node head; G_nodeList tail;};$/;"	m	struct:G_nodeList_
tail	liveness.h	/^	Live_moveList tail;$/;"	m	struct:Live_moveList_
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
tail	temp.h	/^struct Temp_labelList_ { Temp_label head; Temp_labelList tail;};$/;"	m	struct:Temp_labelList_
tail	temp.h	/^struct Temp_tempList_ { Temp_temp head; Temp_tempList tail;};$/;"	m	struct:Temp_tempList_
tail	translate.c	/^    Tr_expList tail;$/;"	m	struct:Tr_expList_	file:
tail	translate.c	/^    patchList tail;$/;"	m	struct:patchList_	file:
tail	translate.h	/^	Tr_accessList tail;$/;"	m	struct:Tr_accessList_
tail	tree.h	/^struct T_expList_ {T_exp head; T_expList tail;};$/;"	m	struct:T_expList_
tail	tree.h	/^struct T_stmList_ {T_stm head; T_stmList tail;};$/;"	m	struct:T_stmList_
tail	types.h	/^struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};$/;"	m	struct:Ty_fieldList_
tail	types.h	/^struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};$/;"	m	struct:Ty_tyList_
tail	util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
temps	temp.c	/^static int temps = 100;$/;"	v	file:
test	absyn.h	/^	      struct {A_exp test, body;} whilee;$/;"	m	struct:A_exp_::__anon7::__anon13
test	absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	struct:A_exp_::__anon7::__anon12
then	absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	struct:A_exp_::__anon7::__anon12
<<<<<<< HEAD
tigermain	hello.tig.s	/^tigermain:$/;"	l
=======
>>>>>>> 22cea20997dfe7adb3226fbe3cabb43c679169e3
top	table.c	/^  void *top;$/;"	m	struct:TAB_table_	file:
trace	canon.c	/^static void trace(T_stmList list)$/;"	f	file:
transDec	semant.c	/^Tr_exp transDec(S_table venv, S_table tenv, A_dec d, Tr_level level) {$/;"	f
transExp	semant.c	/^struct expty transExp(S_table venv, S_table tenv, A_exp a, Tr_level level) {$/;"	f
transTy	semant.c	/^Ty_ty transTy(S_table tenv, A_ty a) {$/;"	f
transVar	semant.c	/^struct expty transVar(S_table venv, S_table tenv, A_var v, Tr_level level) {$/;"	f
true	tree.h	/^			      Temp_label true, false;} CJUMP;$/;"	m	struct:T_stm_::__anon41::__anon44
trues	translate.c	/^    patchList trues;$/;"	m	struct:Cx	file:
ty	absyn.h	/^struct A_namety_ {S_symbol name; A_ty ty;};$/;"	m	struct:A_namety_
ty	env.h	/^            Ty_ty ty;$/;"	m	struct:E_enventry_::__anon29::__anon30
ty	semant.h	/^    Ty_ty ty;$/;"	m	struct:expty
ty	tiger.y	/^ty      :   nameTy      {$$ = $1;}$/;"	l
ty	types.h	/^		      struct {S_symbol sym; Ty_ty ty;} name;$/;"	m	struct:Ty_ty_::__anon52::__anon53
ty	types.h	/^struct Ty_field_ {S_symbol name; Ty_ty ty;};$/;"	m	struct:Ty_field_
ty	y.tab.c	/^    A_ty ty;$/;"	m	union:YYSTYPE	file:
ty	y.tab.h	/^    A_ty ty;$/;"	m	union:YYSTYPE
tyint	types.c	/^static struct Ty_ty_ tyint = {Ty_int};$/;"	v	typeref:struct:Ty_ty_	file:
tynil	types.c	/^static struct Ty_ty_ tynil = {Ty_nil};$/;"	v	typeref:struct:Ty_ty_	file:
typ	absyn.h	/^	      struct {S_symbol typ; A_efieldList fields;} record;$/;"	m	struct:A_exp_::__anon7::__anon10
typ	absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon7::__anon16
typ	absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon18::__anon19
typ	absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
type	absyn.h	/^	    A_nametyList type;$/;"	m	union:A_dec_::__anon18
typeDec	tiger.y	/^typeDec :   nametyList {$$ = A_TypeDec(EM_tokPos, $1);}$/;"	l
tystring	types.c	/^static struct Ty_ty_ tystring = {Ty_string};$/;"	v	typeref:struct:Ty_ty_	file:
tyvoid	types.c	/^static struct Ty_ty_ tyvoid = {Ty_void};$/;"	v	typeref:struct:Ty_ty_	file:
u	absyn.h	/^		   } u;$/;"	m	struct:A_ty_	typeref:union:A_ty_::__anon21
u	absyn.h	/^	     } u;$/;"	m	struct:A_var_	typeref:union:A_var_::__anon3
u	absyn.h	/^	    } u;$/;"	m	struct:A_exp_	typeref:union:A_exp_::__anon7
u	absyn.h	/^	  } u;$/;"	m	struct:A_dec_	typeref:union:A_dec_::__anon18
u	assem.h	/^		    } u;$/;"	m	struct:AS_instr_	typeref:union:AS_instr_::__anon24
u	env.h	/^    } u;$/;"	m	struct:E_enventry_	typeref:union:E_enventry_::__anon29
u	frame.h	/^			} u;$/;"	m	struct:F_frag_	typeref:union:F_frag_::__anon33
u	translate.c	/^    } u;$/;"	m	struct:Tr_exp_	typeref:union:Tr_exp_::__anon37	file:
u	tree.h	/^		    } u;$/;"	m	struct:T_stm_	typeref:union:T_stm_::__anon41
u	tree.h	/^		   } u;$/;"	m	struct:T_exp_	typeref:union:T_exp_::__anon47
u	types.h	/^		    } u;$/;"	m	struct:Ty_ty_	typeref:union:Ty_ty_::__anon52
u	x86frame.c	/^    } u;$/;"	m	struct:F_access_	typeref:union:F_access_::__anon55	file:
unCx	translate.c	/^static struct Cx unCx(Tr_exp e) {$/;"	f	file:
unEx	translate.c	/^static T_exp unEx(Tr_exp e) {$/;"	f	file:
unNx	translate.c	/^static T_stm unNx(Tr_exp e) {$/;"	f	file:
under	temp.c	/^struct Temp_map_ {TAB_table tab; Temp_map under;};$/;"	m	struct:Temp_map_	file:
unput	lex.yy.c	194;"	d	file:
value	table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
var	absyn.h	/^	       struct {A_var var;$/;"	m	struct:A_var_::__anon3::__anon4
var	absyn.h	/^	       struct {A_var var;$/;"	m	struct:A_var_::__anon3::__anon5
var	absyn.h	/^	      struct {A_var var; A_exp exp;} assign;$/;"	m	struct:A_exp_::__anon7::__anon11
var	absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon7::__anon14
var	absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon18::__anon19
var	absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	union:A_dec_::__anon18	typeref:struct:A_dec_::__anon18::__anon19
var	absyn.h	/^       union {A_var var;$/;"	m	union:A_exp_::__anon7
var	env.h	/^        } var;$/;"	m	union:E_enventry_::__anon29	typeref:struct:E_enventry_::__anon29::__anon30
var	tiger.y	/^var :   var LBRACK exp RBRACK   {$$ = A_SubscriptVar(EM_tokPos, $1, $3);}$/;"	l
var	y.tab.c	/^	A_var var;$/;"	m	union:YYSTYPE	file:
var	y.tab.h	/^	A_var var;$/;"	m	union:YYSTYPE
varDec	tiger.y	/^varDec  :   VAR ID ASSIGN exp            {$$ = A_VarDec(EM_tokPos, S_Symbol($2), NULL, $4);}$/;"	l
varExp	tiger.y	/^varExp  :   var     {$$ = A_VarExp(EM_tokPos, $1);}$/;"	l
whileExp	tiger.y	/^whileExp:   WHILE exp DO exp          {$$ = A_WhileExp(EM_tokPos, $2, $4);}$/;"	l
whilee	absyn.h	/^	      struct {A_exp test, body;} whilee;$/;"	m	union:A_exp_::__anon7	typeref:struct:A_exp_::__anon7::__anon13
yy_accept	lex.yy.c	/^static yyconst flex_int16_t yy_accept[110] =$/;"	v	file:
yy_at_bol	lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	lex.yy.c	/^static yyconst flex_uint16_t yy_base[114] =$/;"	v	file:
yy_bs_column	lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	lex.yy.c	/^static yyconst flex_int16_t yy_chk[301] =$/;"	v	file:
yy_create_buffer	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	lex.yy.c	/^static yyconst flex_int16_t yy_def[114] =$/;"	v	file:
yy_delete_buffer	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	lex.yy.c	/^static yyconst YY_CHAR yy_ec[256] =$/;"	v	file:
yy_fatal_error	lex.yy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	lex.yy.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	lex.yy.c	/^static yyconst YY_CHAR yy_meta[48] =$/;"	v	file:
yy_n_chars	lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	lex.yy.c	318;"	d	file:
yy_nxt	lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	lex.yy.c	/^static yyconst flex_uint16_t yy_nxt[301] =$/;"	v	file:
yy_reduce_print	y.tab.c	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )$/;"	f
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f
yy_set_bol	lex.yy.c	330;"	d	file:
yy_set_interactive	lex.yy.c	320;"	d	file:
yy_size_t	lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	y.tab.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	y.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	y.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	y.tab.c	/^union yyalloc$/;"	u	file:
yychar	y.tab.c	/^int yychar;$/;"	v
yycheck	y.tab.c	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	y.tab.c	801;"	d	file:
yyconst	lex.yy.c	106;"	d	file:
yyconst	lex.yy.c	108;"	d	file:
yydebug	y.tab.c	/^int yydebug;$/;"	v
yydefact	y.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	y.tab.c	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	y.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	y.tab.c	800;"	d	file:
yyerror	y.tab.c	/^void yyerror(char *s)$/;"	f
yyfree	lex.yy.c	/^void yyfree (void * ptr )$/;"	f
yyget_debug	lex.yy.c	/^int yyget_debug  (void)$/;"	f
yyget_in	lex.yy.c	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	lex.yy.c	/^yy_size_t yyget_leng  (void)$/;"	f
yyget_lineno	lex.yy.c	/^int yyget_lineno  (void)$/;"	f
yyget_out	lex.yy.c	/^FILE *yyget_out  (void)$/;"	f
yyget_text	lex.yy.c	/^char *yyget_text  (void)$/;"	f
yyin	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	lex.yy.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	lex.yy.c	/^yy_size_t yyleng;$/;"	v
yyless	lex.yy.c	181;"	d	file:
yyless	lex.yy.c	1995;"	d	file:
yyless	lex.yy.c	1996;"	d	file:
yylex_destroy	lex.yy.c	/^int yylex_destroy  (void)$/;"	f
yylineno	lex.yy.c	/^int yylineno = 1;$/;"	v
yylval	y.tab.c	/^YYSTYPE yylval;$/;"	v
yymore	lex.yy.c	560;"	d	file:
yynerrs	y.tab.c	/^int yynerrs;$/;"	v
yyout	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yypact	y.tab.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	y.tab.c	604;"	d	file:
yyparse	y.tab.c	/^yyparse (void)$/;"	f
yypgoto	y.tab.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state (void)$/;"	f
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	y.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	y.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrline	y.tab.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyset_debug	lex.yy.c	/^void yyset_debug (int  _bdebug )$/;"	f
yyset_in	lex.yy.c	/^void yyset_in (FILE *  _in_str )$/;"	f
yyset_lineno	lex.yy.c	/^void yyset_lineno (int  _line_number )$/;"	f
yyset_out	lex.yy.c	/^void yyset_out (FILE *  _out_str )$/;"	f
yyss_alloc	y.tab.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	y.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	y.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	y.tab.c	1002;"	d	file:
yystrlen	y.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	y.tab.c	986;"	d	file:
yysyntax_error	y.tab.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	y.tab.c	/^static const yytype_int16 yytable[] =$/;"	v	file:
yytable_value_is_error	y.tab.c	609;"	d	file:
yyterminate	lex.yy.c	742;"	d	file:
yytext	lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	lex.yy.c	354;"	d	file:
yytext_ptr	lex.yy.c	356;"	d	file:
yytname	y.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	y.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	y.tab.c	/^  enum yytokentype$/;"	g	file:
yytokentype	y.tab.h	/^  enum yytokentype$/;"	g
yytoknum	y.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	y.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	y.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	y.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	y.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	y.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	y.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	y.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	y.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	y.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	lex.yy.c	/^    static void yyunput (int c, char * yy_bp )$/;"	f	file:
yyvs_alloc	y.tab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
yywrap	lex.yy.c	/^int yywrap(void)$/;"	f
