State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 var: var LBRACK exp RBRACK
    3    | var DOT ID
    4    | ID
    5    | ID LBRACK exp RBRACK

    6 exp: varExp
    7    | nilExp
    8    | intExp
    9    | stringExp
   10    | callExp
   11    | opExp
   12    | recordExp
   13    | seqExp
   14    | assignExp
   15    | ifExp
   16    | whileExp
   17    | forExp
   18    | breakExp
   19    | letExp
   20    | arrayExp

   21 varExp: var

   22 nilExp: NIL

   23 intExp: INT

   24 stringExp: STRING

   25 callExp: ID LPAREN argList RPAREN

   26 opExp: exp PLUS exp
   27      | exp MINUS exp
   28      | exp TIMES exp
   29      | exp DIVIDE exp
   30      | exp EQ exp
   31      | exp NEQ exp
   32      | exp LT exp
   33      | exp LE exp
   34      | exp GT exp
   35      | exp GE exp
   36      | MINUS exp

   37 recordExp: ID LBRACE efieldList RBRACE

   38 seqExp: LPAREN seqList RPAREN

   39 assignExp: var ASSIGN exp

   40 ifExp: IF exp THEN exp ELSE exp
   41      | IF exp THEN exp
   42      | exp OR exp
   43      | exp AND exp

   44 whileExp: WHILE exp DO exp

   45 forExp: FOR ID ASSIGN exp TO exp DO exp

   46 breakExp: BREAK

   47 letExp: LET decList IN seqList END

   48 arrayExp: ID LBRACK exp RBRACK OF exp

   49 dec: fucntionDec
   50    | varDec
   51    | typeDec

   52 fucntionDec: funcdecList

   53 varDec: VAR ID ASSIGN exp
   54       | VAR ID COLON ID ASSIGN exp

   55 typeDec: nametyList

   56 ty: nameTy
   57   | recordTy
   58   | arrayTy

   59 nameTy: ID

   60 recordTy: LBRACE fieldList RBRACE

   61 arrayTy: ARRAY OF ID

   62 decList: dec
   63        | dec decList

   64 argList: exp _argList
   65        | %empty

   66 _argList: COMMA exp _argList
   67         | %empty

   68 seqList: exp SEMICOLON seqList
   69        | exp
   70        | %empty

   71 field: ID COLON ID

   72 fieldList: field _fieldList
   73          | %empty

   74 _fieldList: COMMA field _fieldList
   75           | %empty

   76 funcdec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp
   77        | FUNCTION ID LPAREN fieldList RPAREN EQ exp

   78 funcdecList: funcdec funcdecList
   79            | funcdec

   80 namety: TYPE ID EQ ty

   81 nametyList: namety nametyList
   82           | namety

   83 efield: ID EQ exp

   84 efieldList: efield _efieldList
   85           | %empty

   86 _efieldList: COMMA efield _efieldList
   87            | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 3 4 5 25 37 45 48 53 54 59 61 71 76 77 80 83
STRING (259) 24
INT (260) 23
COMMA (261) 66 74 86
COLON (262) 54 71 76
SEMICOLON (263) 68
LPAREN (264) 25 38 76 77
RPAREN (265) 25 38 76 77
LBRACK (266) 2 5 48
RBRACK (267) 2 5 48
LBRACE (268) 37 60
RBRACE (269) 37 60
DOT (270) 3
PLUS (271) 26
MINUS (272) 27 36
TIMES (273) 28
DIVIDE (274) 29
EQ (275) 30 76 77 80 83
NEQ (276) 31
LT (277) 32
LE (278) 33
GT (279) 34
GE (280) 35
AND (281) 43
OR (282) 42
ASSIGN (283) 39 45 53 54
ARRAY (284) 61
IF (285) 40 41
THEN (286) 40 41
ELSE (287) 40
WHILE (288) 44
FOR (289) 45
TO (290) 45
DO (291) 44 45
LET (292) 47
IN (293) 47
END (294) 47
OF (295) 48 61
BREAK (296) 46
NIL (297) 22
FUNCTION (298) 76 77
VAR (299) 53 54
TYPE (300) 80
LOWER (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
var (49)
    on left: 2 3 4 5, on right: 2 3 21 39
exp (50)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right: 1
    2 5 26 27 28 29 30 31 32 33 34 35 36 39 40 41 42 43 44 45 48 53
    54 64 66 68 69 76 77 83
varExp (51)
    on left: 21, on right: 6
nilExp (52)
    on left: 22, on right: 7
intExp (53)
    on left: 23, on right: 8
stringExp (54)
    on left: 24, on right: 9
callExp (55)
    on left: 25, on right: 10
opExp (56)
    on left: 26 27 28 29 30 31 32 33 34 35 36, on right: 11
recordExp (57)
    on left: 37, on right: 12
seqExp (58)
    on left: 38, on right: 13
assignExp (59)
    on left: 39, on right: 14
ifExp (60)
    on left: 40 41 42 43, on right: 15
whileExp (61)
    on left: 44, on right: 16
forExp (62)
    on left: 45, on right: 17
breakExp (63)
    on left: 46, on right: 18
letExp (64)
    on left: 47, on right: 19
arrayExp (65)
    on left: 48, on right: 20
dec (66)
    on left: 49 50 51, on right: 62 63
fucntionDec (67)
    on left: 52, on right: 49
varDec (68)
    on left: 53 54, on right: 50
typeDec (69)
    on left: 55, on right: 51
ty (70)
    on left: 56 57 58, on right: 80
nameTy (71)
    on left: 59, on right: 56
recordTy (72)
    on left: 60, on right: 57
arrayTy (73)
    on left: 61, on right: 58
decList (74)
    on left: 62 63, on right: 47 63
argList (75)
    on left: 64 65, on right: 25
_argList (76)
    on left: 66 67, on right: 64 66
seqList (77)
    on left: 68 69 70, on right: 38 47 68
field (78)
    on left: 71, on right: 72 74
fieldList (79)
    on left: 72 73, on right: 60 76 77
_fieldList (80)
    on left: 74 75, on right: 72 74
funcdec (81)
    on left: 76 77, on right: 78 79
funcdecList (82)
    on left: 78 79, on right: 52 78
namety (83)
    on left: 80, on right: 81 82
nametyList (84)
    on left: 81 82, on right: 55 81
efield (85)
    on left: 83, on right: 84 86
efieldList (86)
    on left: 84 85, on right: 37
_efieldList (87)
    on left: 86 87, on right: 84 86


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    var        go to state 13
    exp        go to state 14
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 1

    4 var: ID .
    5    | ID . LBRACK exp RBRACK
   25 callExp: ID . LPAREN argList RPAREN
   37 recordExp: ID . LBRACE efieldList RBRACE
   48 arrayExp: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 30
    LBRACK  shift, and go to state 31
    LBRACE  shift, and go to state 32

    LBRACK    [reduce using rule 4 (var)]
    $default  reduce using rule 4 (var)


State 2

   24 stringExp: STRING .

    $default  reduce using rule 24 (stringExp)


State 3

   23 intExp: INT .

    $default  reduce using rule 23 (intExp)


State 4

   38 seqExp: LPAREN . seqList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (seqList)

    var        go to state 13
    exp        go to state 33
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29
    seqList    go to state 34


State 5

   36 opExp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 35
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 6

   40 ifExp: IF . exp THEN exp ELSE exp
   41      | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 36
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 7

   44 whileExp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 37
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 8

   45 forExp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 38


State 9

   47 letExp: LET . decList IN seqList END

    FUNCTION  shift, and go to state 39
    VAR       shift, and go to state 40
    TYPE      shift, and go to state 41

    dec          go to state 42
    fucntionDec  go to state 43
    varDec       go to state 44
    typeDec      go to state 45
    decList      go to state 46
    funcdec      go to state 47
    funcdecList  go to state 48
    namety       go to state 49
    nametyList   go to state 50


State 10

   46 breakExp: BREAK .

    $default  reduce using rule 46 (breakExp)


State 11

   22 nilExp: NIL .

    $default  reduce using rule 22 (nilExp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 51


State 13

    2 var: var . LBRACK exp RBRACK
    3    | var . DOT ID
   21 varExp: var .
   39 assignExp: var . ASSIGN exp

    LBRACK  shift, and go to state 52
    DOT     shift, and go to state 53
    ASSIGN  shift, and go to state 54

    $default  reduce using rule 21 (varExp)


State 14

    1 program: exp .
   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 1 (program)


State 15

    6 exp: varExp .

    $default  reduce using rule 6 (exp)


State 16

    7 exp: nilExp .

    $default  reduce using rule 7 (exp)


State 17

    8 exp: intExp .

    $default  reduce using rule 8 (exp)


State 18

    9 exp: stringExp .

    $default  reduce using rule 9 (exp)


State 19

   10 exp: callExp .

    $default  reduce using rule 10 (exp)


State 20

   11 exp: opExp .

    $default  reduce using rule 11 (exp)


State 21

   12 exp: recordExp .

    $default  reduce using rule 12 (exp)


State 22

   13 exp: seqExp .

    $default  reduce using rule 13 (exp)


State 23

   14 exp: assignExp .

    $default  reduce using rule 14 (exp)


State 24

   15 exp: ifExp .

    $default  reduce using rule 15 (exp)


State 25

   16 exp: whileExp .

    $default  reduce using rule 16 (exp)


State 26

   17 exp: forExp .

    $default  reduce using rule 17 (exp)


State 27

   18 exp: breakExp .

    $default  reduce using rule 18 (exp)


State 28

   19 exp: letExp .

    $default  reduce using rule 19 (exp)


State 29

   20 exp: arrayExp .

    $default  reduce using rule 20 (exp)


State 30

   25 callExp: ID LPAREN . argList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 65 (argList)

    var        go to state 13
    exp        go to state 67
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29
    argList    go to state 68


State 31

    5 var: ID LBRACK . exp RBRACK
   48 arrayExp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 69
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 32

   37 recordExp: ID LBRACE . efieldList RBRACE

    ID  shift, and go to state 70

    $default  reduce using rule 85 (efieldList)

    efield      go to state 71
    efieldList  go to state 72


State 33

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   68 seqList: exp . SEMICOLON seqList
   69        | exp .

    SEMICOLON  shift, and go to state 73
    PLUS       shift, and go to state 55
    MINUS      shift, and go to state 56
    TIMES      shift, and go to state 57
    DIVIDE     shift, and go to state 58
    EQ         shift, and go to state 59
    NEQ        shift, and go to state 60
    LT         shift, and go to state 61
    LE         shift, and go to state 62
    GT         shift, and go to state 63
    GE         shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66

    $default  reduce using rule 69 (seqList)


State 34

   38 seqExp: LPAREN seqList . RPAREN

    RPAREN  shift, and go to state 74


State 35

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   36      | MINUS exp .
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 36 (opExp)


State 36

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   40 ifExp: IF exp . THEN exp ELSE exp
   41      | IF exp . THEN exp
   42      | exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66
    THEN    shift, and go to state 75


State 37

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   44 whileExp: WHILE exp . DO exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66
    DO      shift, and go to state 76


State 38

   45 forExp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 77


State 39

   76 funcdec: FUNCTION . ID LPAREN fieldList RPAREN COLON ID EQ exp
   77        | FUNCTION . ID LPAREN fieldList RPAREN EQ exp

    ID  shift, and go to state 78


State 40

   53 varDec: VAR . ID ASSIGN exp
   54       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 79


State 41

   80 namety: TYPE . ID EQ ty

    ID  shift, and go to state 80


State 42

   62 decList: dec .
   63        | dec . decList

    FUNCTION  shift, and go to state 39
    VAR       shift, and go to state 40
    TYPE      shift, and go to state 41

    $default  reduce using rule 62 (decList)

    dec          go to state 42
    fucntionDec  go to state 43
    varDec       go to state 44
    typeDec      go to state 45
    decList      go to state 81
    funcdec      go to state 47
    funcdecList  go to state 48
    namety       go to state 49
    nametyList   go to state 50


State 43

   49 dec: fucntionDec .

    $default  reduce using rule 49 (dec)


State 44

   50 dec: varDec .

    $default  reduce using rule 50 (dec)


State 45

   51 dec: typeDec .

    $default  reduce using rule 51 (dec)


State 46

   47 letExp: LET decList . IN seqList END

    IN  shift, and go to state 82


State 47

   78 funcdecList: funcdec . funcdecList
   79            | funcdec .

    FUNCTION  shift, and go to state 39

    $default  reduce using rule 79 (funcdecList)

    funcdec      go to state 47
    funcdecList  go to state 83


State 48

   52 fucntionDec: funcdecList .

    $default  reduce using rule 52 (fucntionDec)


State 49

   81 nametyList: namety . nametyList
   82           | namety .

    TYPE  shift, and go to state 41

    $default  reduce using rule 82 (nametyList)

    namety      go to state 49
    nametyList  go to state 84


State 50

   55 typeDec: nametyList .

    $default  reduce using rule 55 (typeDec)


State 51

    0 $accept: program $end .

    $default  accept


State 52

    2 var: var LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 85
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 53

    3 var: var DOT . ID

    ID  shift, and go to state 86


State 54

   39 assignExp: var ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 87
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 55

   26 opExp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 88
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 56

   27 opExp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 89
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 57

   28 opExp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 90
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 58

   29 opExp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 91
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 59

   30 opExp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 92
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 60

   31 opExp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 93
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 61

   32 opExp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 94
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 62

   33 opExp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 95
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 63

   34 opExp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 96
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 64

   35 opExp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 97
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 65

   43 ifExp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 98
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 66

   42 ifExp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 99
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 67

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   64 argList: exp . _argList

    COMMA   shift, and go to state 100
    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 67 (_argList)

    _argList  go to state 101


State 68

   25 callExp: ID LPAREN argList . RPAREN

    RPAREN  shift, and go to state 102


State 69

    5 var: ID LBRACK exp . RBRACK
   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   48 arrayExp: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 103
    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66


State 70

   83 efield: ID . EQ exp

    EQ  shift, and go to state 104


State 71

   84 efieldList: efield . _efieldList

    COMMA  shift, and go to state 105

    $default  reduce using rule 87 (_efieldList)

    _efieldList  go to state 106


State 72

   37 recordExp: ID LBRACE efieldList . RBRACE

    RBRACE  shift, and go to state 107


State 73

   68 seqList: exp SEMICOLON . seqList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (seqList)

    var        go to state 13
    exp        go to state 33
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29
    seqList    go to state 108


State 74

   38 seqExp: LPAREN seqList RPAREN .

    $default  reduce using rule 38 (seqExp)


State 75

   40 ifExp: IF exp THEN . exp ELSE exp
   41      | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 109
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 76

   44 whileExp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 110
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 77

   45 forExp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 111
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 78

   76 funcdec: FUNCTION ID . LPAREN fieldList RPAREN COLON ID EQ exp
   77        | FUNCTION ID . LPAREN fieldList RPAREN EQ exp

    LPAREN  shift, and go to state 112


State 79

   53 varDec: VAR ID . ASSIGN exp
   54       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 113
    ASSIGN  shift, and go to state 114


State 80

   80 namety: TYPE ID . EQ ty

    EQ  shift, and go to state 115


State 81

   63 decList: dec decList .

    $default  reduce using rule 63 (decList)


State 82

   47 letExp: LET decList IN . seqList END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 70 (seqList)

    var        go to state 13
    exp        go to state 33
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29
    seqList    go to state 116


State 83

   78 funcdecList: funcdec funcdecList .

    $default  reduce using rule 78 (funcdecList)


State 84

   81 nametyList: namety nametyList .

    $default  reduce using rule 81 (nametyList)


State 85

    2 var: var LBRACK exp . RBRACK
   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    RBRACK  shift, and go to state 117
    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66


State 86

    3 var: var DOT ID .

    $default  reduce using rule 3 (var)


State 87

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   39 assignExp: var ASSIGN exp .
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 39 (assignExp)


State 88

   26 opExp: exp . PLUS exp
   26      | exp PLUS exp .
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 26 (opExp)


State 89

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   27      | exp MINUS exp .
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    $default  reduce using rule 27 (opExp)


State 90

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   28      | exp TIMES exp .
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    $default  reduce using rule 28 (opExp)


State 91

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   29      | exp DIVIDE exp .
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    $default  reduce using rule 29 (opExp)


State 92

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   30      | exp EQ exp .
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 30 (opExp)


State 93

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   31      | exp NEQ exp .
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 31 (opExp)


State 94

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   32      | exp LT exp .
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 32 (opExp)


State 95

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   33      | exp LE exp .
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 33 (opExp)


State 96

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   34      | exp GT exp .
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 34 (opExp)


State 97

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   35      | exp GE exp .
   42 ifExp: exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 35 (opExp)


State 98

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   43      | exp AND exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64

    $default  reduce using rule 43 (ifExp)


State 99

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   42      | exp OR exp .
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64

    $default  reduce using rule 42 (ifExp)


State 100

   66 _argList: COMMA . exp _argList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 118
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 101

   64 argList: exp _argList .

    $default  reduce using rule 64 (argList)


State 102

   25 callExp: ID LPAREN argList RPAREN .

    $default  reduce using rule 25 (callExp)


State 103

    5 var: ID LBRACK exp RBRACK .
   48 arrayExp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 119

    $default  reduce using rule 5 (var)


State 104

   83 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 120
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 105

   86 _efieldList: COMMA . efield _efieldList

    ID  shift, and go to state 70

    efield  go to state 121


State 106

   84 efieldList: efield _efieldList .

    $default  reduce using rule 84 (efieldList)


State 107

   37 recordExp: ID LBRACE efieldList RBRACE .

    $default  reduce using rule 37 (recordExp)


State 108

   68 seqList: exp SEMICOLON seqList .

    $default  reduce using rule 68 (seqList)


State 109

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   40 ifExp: IF exp THEN exp . ELSE exp
   41      | IF exp THEN exp .
   42      | exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66
    ELSE    shift, and go to state 122

    $default  reduce using rule 41 (ifExp)


State 110

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   44 whileExp: WHILE exp DO exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 44 (whileExp)


State 111

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   45 forExp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66
    TO      shift, and go to state 123


State 112

   76 funcdec: FUNCTION ID LPAREN . fieldList RPAREN COLON ID EQ exp
   77        | FUNCTION ID LPAREN . fieldList RPAREN EQ exp

    ID  shift, and go to state 124

    $default  reduce using rule 73 (fieldList)

    field      go to state 125
    fieldList  go to state 126


State 113

   54 varDec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 127


State 114

   53 varDec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 128
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 115

   80 namety: TYPE ID EQ . ty

    ID      shift, and go to state 129
    LBRACE  shift, and go to state 130
    ARRAY   shift, and go to state 131

    ty        go to state 132
    nameTy    go to state 133
    recordTy  go to state 134
    arrayTy   go to state 135


State 116

   47 letExp: LET decList IN seqList . END

    END  shift, and go to state 136


State 117

    2 var: var LBRACK exp RBRACK .

    $default  reduce using rule 2 (var)


State 118

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   66 _argList: COMMA exp . _argList

    COMMA   shift, and go to state 100
    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 67 (_argList)

    _argList  go to state 137


State 119

   48 arrayExp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 138
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 120

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   83 efield: ID EQ exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 83 (efield)


State 121

   86 _efieldList: COMMA efield . _efieldList

    COMMA  shift, and go to state 105

    $default  reduce using rule 87 (_efieldList)

    _efieldList  go to state 139


State 122

   40 ifExp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 140
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 123

   45 forExp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 141
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 124

   71 field: ID . COLON ID

    COLON  shift, and go to state 142


State 125

   72 fieldList: field . _fieldList

    COMMA  shift, and go to state 143

    $default  reduce using rule 75 (_fieldList)

    _fieldList  go to state 144


State 126

   76 funcdec: FUNCTION ID LPAREN fieldList . RPAREN COLON ID EQ exp
   77        | FUNCTION ID LPAREN fieldList . RPAREN EQ exp

    RPAREN  shift, and go to state 145


State 127

   54 varDec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 146


State 128

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   53 varDec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 53 (varDec)


State 129

   59 nameTy: ID .

    $default  reduce using rule 59 (nameTy)


State 130

   60 recordTy: LBRACE . fieldList RBRACE

    ID  shift, and go to state 124

    $default  reduce using rule 73 (fieldList)

    field      go to state 125
    fieldList  go to state 147


State 131

   61 arrayTy: ARRAY . OF ID

    OF  shift, and go to state 148


State 132

   80 namety: TYPE ID EQ ty .

    $default  reduce using rule 80 (namety)


State 133

   56 ty: nameTy .

    $default  reduce using rule 56 (ty)


State 134

   57 ty: recordTy .

    $default  reduce using rule 57 (ty)


State 135

   58 ty: arrayTy .

    $default  reduce using rule 58 (ty)


State 136

   47 letExp: LET decList IN seqList END .

    $default  reduce using rule 47 (letExp)


State 137

   66 _argList: COMMA exp _argList .

    $default  reduce using rule 66 (_argList)


State 138

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   48 arrayExp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 48 (arrayExp)


State 139

   86 _efieldList: COMMA efield _efieldList .

    $default  reduce using rule 86 (_efieldList)


State 140

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   40 ifExp: IF exp THEN exp ELSE exp .
   42      | exp . OR exp
   43      | exp . AND exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 40 (ifExp)


State 141

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   45 forExp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66
    DO      shift, and go to state 149


State 142

   71 field: ID COLON . ID

    ID  shift, and go to state 150


State 143

   74 _fieldList: COMMA . field _fieldList

    ID  shift, and go to state 124

    field  go to state 151


State 144

   72 fieldList: field _fieldList .

    $default  reduce using rule 72 (fieldList)


State 145

   76 funcdec: FUNCTION ID LPAREN fieldList RPAREN . COLON ID EQ exp
   77        | FUNCTION ID LPAREN fieldList RPAREN . EQ exp

    COLON  shift, and go to state 152
    EQ     shift, and go to state 153


State 146

   54 varDec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 154
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 147

   60 recordTy: LBRACE fieldList . RBRACE

    RBRACE  shift, and go to state 155


State 148

   61 arrayTy: ARRAY OF . ID

    ID  shift, and go to state 156


State 149

   45 forExp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 157
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 150

   71 field: ID COLON ID .

    $default  reduce using rule 71 (field)


State 151

   74 _fieldList: COMMA field . _fieldList

    COMMA  shift, and go to state 143

    $default  reduce using rule 75 (_fieldList)

    _fieldList  go to state 158


State 152

   76 funcdec: FUNCTION ID LPAREN fieldList RPAREN COLON . ID EQ exp

    ID  shift, and go to state 159


State 153

   77 funcdec: FUNCTION ID LPAREN fieldList RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 160
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 154

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   54 varDec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 54 (varDec)


State 155

   60 recordTy: LBRACE fieldList RBRACE .

    $default  reduce using rule 60 (recordTy)


State 156

   61 arrayTy: ARRAY OF ID .

    $default  reduce using rule 61 (arrayTy)


State 157

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   45 forExp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 45 (forExp)


State 158

   74 _fieldList: COMMA field _fieldList .

    $default  reduce using rule 74 (_fieldList)


State 159

   76 funcdec: FUNCTION ID LPAREN fieldList RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 161


State 160

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   77 funcdec: FUNCTION ID LPAREN fieldList RPAREN EQ exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 77 (funcdec)


State 161

   76 funcdec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    var        go to state 13
    exp        go to state 162
    varExp     go to state 15
    nilExp     go to state 16
    intExp     go to state 17
    stringExp  go to state 18
    callExp    go to state 19
    opExp      go to state 20
    recordExp  go to state 21
    seqExp     go to state 22
    assignExp  go to state 23
    ifExp      go to state 24
    whileExp   go to state 25
    forExp     go to state 26
    breakExp   go to state 27
    letExp     go to state 28
    arrayExp   go to state 29


State 162

   26 opExp: exp . PLUS exp
   27      | exp . MINUS exp
   28      | exp . TIMES exp
   29      | exp . DIVIDE exp
   30      | exp . EQ exp
   31      | exp . NEQ exp
   32      | exp . LT exp
   33      | exp . LE exp
   34      | exp . GT exp
   35      | exp . GE exp
   42 ifExp: exp . OR exp
   43      | exp . AND exp
   76 funcdec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 55
    MINUS   shift, and go to state 56
    TIMES   shift, and go to state 57
    DIVIDE  shift, and go to state 58
    EQ      shift, and go to state 59
    NEQ     shift, and go to state 60
    LT      shift, and go to state 61
    LE      shift, and go to state 62
    GT      shift, and go to state 63
    GE      shift, and go to state 64
    AND     shift, and go to state 65
    OR      shift, and go to state 66

    $default  reduce using rule 76 (funcdec)
